[{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"installation-and-loading-of-the-limpca-package","dir":"Articles","previous_headings":"","what":"Installation and loading of the limpca package","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"limpca can installed Bioconductor: loaded R session:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"limpca\") library(\"limpca\")"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"data-and-model-presentation","dir":"Articles","previous_headings":"","what":"Data and model presentation","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"data set comes study modulation immunity rainbow trout (Oncorhynchus mykiss) exposure cadmium (Cd) combined polyunsaturated fatty acids (PUFAs) enriched diets [Cornet et al., 2018]. responses quantified measuring modification expression 15 immune-related genes (m = 15) RT-qPCR (reverse transcription quantitative polymerase chain reaction). experiment carried 72 trouts 3 factors considered experimental design: Day: Measurements trouts collected days 28, 70 72 Treatment : Four polyunsaturated fatty acid diets: alpha-linolenic acid (ALA), linoleic acid (LA), eicosapentaenoic acid (EPA) docosahexaenoic acid (DHA) Exposure: Trouts exposed (level = 2) (level = 0) high cadmium concentrations. gives 3 × 4 × 2 factorial design. 24 trials corresponds different aquarium. Three fishes analysed (3 replicates) condition, giving total 72 observations. limpca vignette, data first explored order prepare appropriate data set ASCA/APCA analysis. Data first represented PCA outliers removed. remaining observations log transformed. Next, data aquarium mean aggregated order avoid inclusion aquarium random factor statistical model limpca yet able handle mixed linear models. data finally centered scaled column. estimated model (general) linear model fixed factors including main effects two way interactions. three way interaction included aggregated design replicate. detailed presentation analysis dataset also available [Benaiche, 2022].","code":""},{"path":[]},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"data-import-and-design-visualization","dir":"Articles","previous_headings":"Data import and exploration","what":"Data import and design visualization","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"trout data set list three objects : model outcomes, design model formula.  graph confirms design balanced.","code":"data(\"trout\") # print number of and response names cat(\"\\n Nb of Responses :  \", ncol(trout$outcomes), \"\\n \") Nb of Responses :   15 cat(\"\\nResponses :\\n\", colnames(trout$outcomes), \"\\n \") Responses :  IL.1b IL6 IL8 Lysozyme IgM MCSFR.a MPO TGF.b TLR3 TLR9 MyD88 SOD Elov5 C3 Cox2 # Order responses by alphabetic order trout$outcomes <- trout$outcomes[, order(dimnames(trout$outcomes)[[2]])] cat(\"\\n Ordered responses :\\n  \", colnames(trout$outcomes), \"\\n \") Ordered responses :    C3 Cox2 Elov5 IgM IL.1b IL6 IL8 Lysozyme MCSFR.a MPO MyD88 SOD TGF.b TLR3 TLR9 # print factor names cat(\"\\nDesign factors :  \", colnames(trout$design), \"\\n \") Design factors :   Day Treatment Exposure Aquarium # plot the design with plotDesign function limpca::plotDesign(     design = trout$design, x = \"Treatment\",     y = \"Day\", cols = \"Exposure\",     title = \"Initial design of the trout dataset\" )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"principal-component-analysis-of-row-data","dir":"Articles","previous_headings":"Data import and exploration","what":"Principal Component Analysis of row data","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Functions pcaBySvd, pcaScreePlot pcaScorePlot used take first look data PCA. PCA shows data log transformed.","code":"resPCA <- limpca::pcaBySvd(trout$outcomes) limpca::pcaScreePlot(resPCA, nPC = 8) limpca::pcaScorePlot(     resPcaBySvd = resPCA, axes = c(1, 2),     title = \"Score plot of original data \",     design = trout$design, color = \"Aquarium\",     points_labs_rn = TRUE ) Warning: ggrepel: 64 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"log10-transformation-of-the-data-and-new-pca","dir":"Articles","previous_headings":"Data import and exploration","what":"Log10 transformation of the data and new PCA","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Data log transfomed new PCA applied. score plot show clearly two outliers (.e. fishes D72EPA2.1 D28EPA2.2). removed analysis next steps.","code":"# Log Transformation trout_log <- trout trout_log$outcomes <- as.matrix(log10(trout$outcomes))  # new PCA resPCA1 <- limpca::pcaBySvd(trout_log$outcomes) limpca::pcaScreePlot(resPCA1, nPC = 8) limpca::pcaScorePlot(     resPcaBySvd = resPCA1, axes = c(1, 2),     title = \"Score plot of Log10 data \",     design = trout_log$design, color = \"Aquarium\",     drawShapes = \"polygon\", points_labs_rn = TRUE ) Warning: ggrepel: 71 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"new-pca-without-the-outliers","dir":"Articles","previous_headings":"Data import and exploration","what":"New PCA without the outliers","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"New data created without 2 outliers new PCA performed. option polygon pcaScorePlot function allows group data aquarium. aquariums, 3 fishes shows similar results . data now clean analysis    option polygon pcaScorePlot function allows group data aquarium. aquariums, 3 fishes shows similar results .","code":"# Remove outliers and create new dataset trout_clean <- trout_log outliers <- match(     c(\"D72EPA2.1\", \"D28EPA2.2\"),     rownames(trout_log$outcomes) ) trout_clean$outcomes <- trout_log$outcomes[-outliers, ] trout_clean$design <- trout_log$design[-outliers, ] # PCA resPCA2 <- limpca::pcaBySvd(trout_clean$outcomes) limpca::pcaScreePlot(resPCA2, nPC = 8) # Score plot Components 1 and 2 limpca::pcaScorePlot(     resPcaBySvd = resPCA2, axes = c(1, 2),     title = \"Score plot of Log10 data without outliers (PC 1&2)\",     design = trout_clean$design, color = \"Aquarium\",     drawShapes = \"polygon\",     points_labs_rn = FALSE ) # Score plot Components 3 and 4 limpca::pcaScorePlot(     resPcaBySvd = resPCA2, axes = c(3, 4),     title = \"Score plot of Log10 data without outliers (PC 3&4)\",     design = trout_clean$design, color = \"Aquarium\",     drawShapes = \"polygon\", points_labs_rn = FALSE )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"mean-agregation-by-aquarium-and-scaling","dir":"Articles","previous_headings":"Data import and exploration","what":"Mean agregation by aquarium and scaling","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Data now mean aggregated aquarium. remove hierarchy design allow apply classical fixed effect general linear model data. Data next centered scaled column. give importance response analysis.","code":"# Mean aggregation mean_outcomes <- matrix(0, nrow = 24, ncol = 15) mean_design <- matrix(0, nrow = 24, ncol = 3) y <- list(     trout_clean$design[[\"Day\"]],     trout_clean$design[[\"Treatment\"]],     trout_clean$design[[\"Exposure\"]] ) for (i in 1:15) {     mean_outcomes[, i] <- aggregate(trout_clean$outcomes[, i], by = y, mean)[, 4] } mean_design <- aggregate(trout_clean$outcomes[, 1], by = y, mean)[, c(1:3)]  # Set row and col names colnames(mean_outcomes) <- colnames(trout_clean$outcomes) colnames(mean_design) <- colnames(trout_clean$design)[1:3] trout_mean_names <- apply(mean_design, 1, paste, collapse = \"\") rownames(mean_outcomes) <- trout_mean_names rownames(mean_design) <- trout_mean_names # Outcomes centering and Scaling mean_outcomes <- scale(mean_outcomes, center = TRUE, scale = TRUE) # New data object creation trout_mean <- list(     \"outcomes\" = mean_outcomes,     \"design\" = mean_design,     \"formula\" = trout$formula ) # Clean objects rm(     resPCA, resPCA1, resPCA2, y, mean_design, mean_outcomes,     trout_mean_names )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"exploration-of-aggregated-data","dir":"Articles","previous_headings":"","what":"Exploration of aggregated data","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Aggregated data now explored.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"design","dir":"Articles","previous_headings":"Exploration of aggregated data","what":"Design","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Note replicate new design. one observation (.e. one aquarium) 24 factor combinations.","code":"pander(head(trout_mean$design)) limpca::plotDesign(     design = trout_mean$design,     title = \"Design of mean aggregated trout dataset\" )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"example-of-lineplot-of-the-responses-for-two-observations","dir":"Articles","previous_headings":"Exploration of aggregated data","what":"Example of lineplot of the responses for two observations","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"limpca::plotLine(trout_mean$outcomes,     rows = c(1, 24),     xaxis_type = \"character\", type = \"s\" ) +     ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"pca-aggregated-data","dir":"Articles","previous_headings":"Exploration of aggregated data","what":"PCA aggregated data","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"resPCA_mean <- limpca::pcaBySvd(trout_mean$outcomes) pcaScreePlot(resPCA_mean, nPC = 6)"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"score-plots","dir":"Articles","previous_headings":"Exploration of aggregated data > PCA aggregated data","what":"Score plots","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"three score plots show clearly Day important effect.","code":"limpca::pcaScorePlot(     resPcaBySvd = resPCA_mean, axes = c(1, 2),     title = \"PCA score plot by Exposure and Day\",     design = trout_mean$design,     shape = \"Exposure\", color = \"Day\",     points_labs_rn = FALSE ) limpca::pcaScorePlot(     resPcaBySvd = resPCA_mean, axes = c(1, 2),     title = \"PCA scores plot by Treatment and Day\",     design = trout_mean$design,     shape = \"Day\", color = \"Treatment\",     points_labs_rn = FALSE ) limpca::pcaScorePlot(     resPcaBySvd = resPCA_mean, axes = c(1, 2),     title = \"PCA scores plot by Exposure and Treatment\",     design = trout_mean$design,     shape = \"Treatment\", color = \"Exposure\",     points_labs_rn = FALSE )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"d-loading-plots","dir":"Articles","previous_headings":"Exploration of aggregated data > PCA aggregated data","what":"1D Loading plots","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"limpca::pcaLoading1dPlot(     resPcaBySvd = resPCA_mean, axes = c(1, 2),     title = \"PCA loadings plot trout\", xlab = \" \",     ylab = \"Expression\", xaxis_type = \"character\", type = \"s\" ) +     ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"d-loading-plots-1","dir":"Articles","previous_headings":"Exploration of aggregated data > PCA aggregated data","what":"2D Loading plots","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"2D loading plot allows already observe responses correlated others. Igm, SOD TLR9 behave quite differently.","code":"limpca::pcaLoading2dPlot(     resPcaBySvd = resPCA_mean, axes = c(1, 2),     title = \"PCA loadings plot trout\", addRownames = TRUE )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"scatterplot-matrix-of-all-15-responses","dir":"Articles","previous_headings":"Exploration of aggregated data","what":"Scatterplot matrix of all 15 responses","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"plotScatterM function allows visualize 2 2 relation () responses simultaneously choose different markers colors diagonal according factor levels. Strong relations expressions confirmed genes.","code":"limpca::plotScatterM(     Y = trout_mean$outcomes, cols = c(1:15),     design = trout_mean$design,     varname.colorup = \"Day\",     vec.colorup = c(\"CadetBlue4\", \"pink\", \"orange\"),     varname.colordown = \"Day\",     vec.colordown = c(\"CadetBlue4\", \"pink\", \"orange\"),     varname.pchup = \"Treatment\",     varname.pchdown = \"Exposure\" )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"glm-decomposition","dir":"Articles","previous_headings":"","what":"GLM decomposition","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"estimated model following : outcomes ~ Day + Treatment + Exposure + Day:Treatment + Day:Exposure + Treatment:Exposure Since design one replicate, three way interaction removed confounded residuals.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"model-matrix-x-generation","dir":"Articles","previous_headings":"GLM decomposition","what":"Model matrix X generation","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Table continues Table continues Table continues Table continues ","code":"resLmpModelMatrix <- limpca::lmpModelMatrix(trout_mean) pander::pander(head(resLmpModelMatrix$modelMatrix))"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"computation-of-effect-matrices-and-importances","dir":"Articles","previous_headings":"GLM decomposition","what":"Computation of effect matrices and importances","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"observed , important effect model Day main effect.","code":"resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resLmpEffectMatrices$varPercentagesPlot"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"bootstrap-test-of-effect-significance","dir":"Articles","previous_headings":"GLM decomposition","what":"Bootstrap test of effect significance","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"bootstrap test shows , addition Day effect, Treatment effect also significant (p<0.05) DxT effect nearly significant (p close 0.1). corresponding effect matrices studied deeply PCA next sections. Table continues ","code":"resLmpBootstrapTests <- lmpBootstrapTests(     resLmpEffectMatrices = resLmpEffectMatrices,     nboot = 1000 )  # Print p-values pander::pander(t(resLmpBootstrapTests$resultsTable))"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"asca-and-apca","dir":"Articles","previous_headings":"","what":"ASCA and APCA","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Visualization single combined effect matrices using ASCA APCA. ASCA-E also provided limpca shown .","code":""},{"path":[]},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"pca-decomposition-of-effect-matrices","dir":"Articles","previous_headings":"ASCA and APCA > ASCA","what":"PCA decomposition of effect matrices","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"addition single model effects, combined effect matrix Day+Treatment+Day:Treatment also computed order visualize combined effect two important factors.","code":"resASCA <- lmpPcaEffects(     resLmpEffectMatrices = resLmpEffectMatrices,     method = \"ASCA\",     combineEffects = list(c(         \"Day\", \"Treatment\",         \"Day:Treatment\"     )) )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"contributions","dir":"Articles","previous_headings":"ASCA and APCA > ASCA","what":"Contributions","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Print contributions model effect PC effect matrix decomposition PCA. last result given effect effect reported global variance.","code":"resLmpContributions <- lmpContributions(resASCA) pander::pander(resLmpContributions$totalContribTable) pander::pander(resLmpContributions$effectTable) pander::pander(resLmpContributions$contribTable) pander::pander(resLmpContributions$combinedEffectTable) ## Visualize the more important contributions resLmpContributions$plotContrib"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"scores-and-loadings-plots","dir":"Articles","previous_headings":"ASCA and APCA > ASCA","what":"Scores and loadings plots","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"2D Score plots important effects residual matrix given related loading plots. allow see response effect important","code":""},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"day-effect","dir":"Articles","previous_headings":"ASCA and APCA > ASCA > Scores and loadings plots","what":"Day effect","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"A <- lmpScorePlot(resASCA,     effectNames = \"Day\",     color = \"Day\", shape = \"Day\" ) B <- lmpLoading2dPlot(resASCA,     effectNames = \"Day\",     points_labs = colnames(trout$outcomes) ) grid.arrange(A, B, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"treatment-effect","dir":"Articles","previous_headings":"ASCA and APCA > ASCA > Scores and loadings plots","what":"Treatment effect","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"A <- lmpScorePlot(resASCA,     effectNames = \"Treatment\",     color = \"Treatment\", shape = \"Treatment\" ) B <- lmpLoading2dPlot(resASCA,     effectNames = \"Treatment\",     points_labs = colnames(trout$outcomes) ) grid.arrange(A, B, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"daytreatment-effect","dir":"Articles","previous_headings":"ASCA and APCA > ASCA > Scores and loadings plots","what":"Day:Treatment effect","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"A <- lmpScorePlot(resASCA,     effectNames = \"Day:Treatment\",     color = \"Treatment\", shape = \"Day\" ) B <- lmpLoading2dPlot(resASCA,     effectNames = \"Day:Treatment\",     points_labs = colnames(trout$outcomes) ) grid.arrange(A, B, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"combined-daytreatmentdaytreatment-effect","dir":"Articles","previous_headings":"ASCA and APCA > ASCA > Scores and loadings plots","what":"Combined Day+Treatment+Day:Treatment effect","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"A <- lmpScorePlot(resASCA,     effectNames = \"Day+Treatment+Day:Treatment\",     color = \"Treatment\", shape = \"Day\" ) B <- lmpLoading2dPlot(resASCA,     effectNames = \"Day+Treatment+Day:Treatment\",     points_labs = colnames(trout$outcomes) ) grid.arrange(A, B, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"residual-matrix-decomposition","dir":"Articles","previous_headings":"ASCA and APCA > ASCA > Scores and loadings plots","what":"Residual matrix decomposition","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"score loading plot residual matrix show special pattern.","code":"A <- lmpScorePlot(resASCA,     effectNames = \"Residuals\",     color = \"Treatment\", shape = \"Day\" ) B <- lmpLoading2dPlot(resASCA,     effectNames = \"Residuals\",     points_labs = colnames(trout$outcomes) ) grid.arrange(A, B, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"effect-plots-on-scores","dir":"Articles","previous_headings":"ASCA and APCA > ASCA","what":"Effect plots on scores","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Interaction effects difficult visualize 2D score plots. Effect plots interesting context. show effect one factor PC different level . Day:Treament interaction effect drawn alone combined two related main effects. second graph shows interaction effect small compared Day even treatment main effects.","code":"A <- lmpEffectPlot(resASCA,     effectName = \"Day:Treatment\",     x = \"Day\", z = \"Treatment\", axes = c(1, 2) ) A$PC1 <- A$PC1 + ggtitle(\"PC1: Day:Treatment effect alone\") A$PC2 <- A$PC2 + ggtitle(\"PC2: Day:Treatment effect alone\") grid.arrange(A$PC1, A$PC2, ncol = 2) A <- lmpEffectPlot(resASCA,     effectName = \"Day+Treatment+Day:Treatment\",     x = \"Day\", z = \"Treatment\", axes = c(1, 2) ) A$PC1 <- A$PC1 + ggtitle(\"PC1: Combined D+T+D:T effects\") A$PC2 <- A$PC2 + ggtitle(\"PC2: Combined D+T+D:T effects\") grid.arrange(A$PC1, A$PC2, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"apca","dir":"Articles","previous_headings":"ASCA and APCA","what":"APCA","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"APCA allows visualize PCA model effect added model residuals. gives idea effects signal noise ratio significance. care significance depends also crucially number observations experiment. APCA score plots interesting graphics look . give model effects.","code":"resAPCA <- lmpPcaEffects(     resLmpEffectMatrices =         resLmpEffectMatrices, method = \"APCA\" ) # Day Effect lmpScorePlot(resAPCA,     effectNames = \"Day\",     color = \"Day\", shape = \"Day\", drawShapes = \"ellipse\" ) # Treatment Effect lmpScorePlot(resAPCA,     effectNames = \"Treatment\",     color = \"Treatment\", shape = \"Treatment\", drawShapes = \"ellipse\" ) Warning:  [1m [22mRemoved 30 rows containing missing values or values outside the scale range (`geom_path()`). # Exposure Effect lmpScorePlot(resAPCA,     effectNames = \"Exposure\",     color = \"Exposure\", shape = \"Exposure\", drawShapes = \"ellipse\" ) # Day:Treatment Effect lmpScorePlot(resAPCA,     effectNames = \"Day:Treatment\",     color = \"Treatment\", shape = \"Day\", drawShapes = \"polygon\" )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"univariate-anova","dir":"Articles","previous_headings":"","what":"Univariate ANOVA","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"part vignette links results ASCA/APCA analysis classical analysis applied -omics transcriptomic data analysis (see e.g. limma package). ANOVA model fitted response separately , model effect, p-values effect significance corrected FDR ordered. results allow detect responses effect interest significant (e.g. find gene potential biomarker differentiate patients without given disease). code applies analysis compares responses importance based FDR p-values response loadings obtained ASCA/APCA.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"parallel-anova-modeling-and-fdr-p-value-corrections","dir":"Articles","previous_headings":"Univariate ANOVA","what":"Parallel ANOVA modeling and FDR p-value corrections","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"# Creation of a matrix to store the p-values m <- ncol(trout_mean$outcomes) mat_pval <- matrix(nrow = m, ncol = 6) dimnames(mat_pval) <- list(     dimnames(trout_mean$outcomes)[[2]],     c(         \"Day\", \"Treatment\", \"Exposure\", \"Day:Treatment\",         \"Day:Exposure\", \"Treatment:Exposure\"     ) )  # Parallel ANOVA modeling for (i in 1:m) {     data <- cbind(y = trout_mean$outcomes[, i], trout_mean$design)     Modl <- lm(y ~ Day + Treatment + Exposure + Day:Treatment + Day:Exposure + Treatment:Exposure,         contrasts = list(Day = contr.sum, Treatment = contr.sum, Exposure = contr.sum),         data = data     )     tabanova <- Anova(Modl, type = 3)     mat_pval[i, ] <- tabanova[2:7, 4] }  # FDR p-values correction for (i in 1:6) mat_pval[, i] <- p.adjust(mat_pval[, i], method = \"BH\")"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"fdr-corrected-p_values-q-values","dir":"Articles","previous_headings":"Univariate ANOVA","what":"FDR corrected p_values (q-values)","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Table continues ","code":"pander(mat_pval) heatmap(-log10(mat_pval),     Rowv = NA, Colv = \"Rowv\",     cexCol = 0.8, scale = \"none\", main = \"Heatmap of -log10(q-values)\" )"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"plot-asca-loadings-versus--log10q-values","dir":"Articles","previous_headings":"Univariate ANOVA","what":"Plot ASCA loadings versus -log10(q-values)","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Plot relation ASCA loadings FDR p-values three important effects model : Day, Treatment Day:Treatment. FDR p-values log transformed loadings summarized 2 first components.","code":"Effects <- c(\"Day\", \"Treatment\", \"Day:Treatment\")  for (i in 1:3) {     Pval_log <- -log10(mat_pval[, Effects[i]])     resA <- resASCA[[Effects[i]]]     PC12Load <- as.vector(sqrt(resA$loadings[, 1:2]^2 %*% resA$singvar[1:2]^2))     matres <- cbind(PC12Load, Pval_log)     A[[i]] <- plotScatter(         Y = matres, xy = c(1, 2),         points_labs = rownames(matres),         xlab = \"PC1&2 ASCA loadings\", ylab = \"-log10(p-values)\",         title = paste(Effects[i], \"effect\")     ) }  A[[1]] Warning: ggrepel: 1 unlabeled data points (too many overlaps). Consider increasing max.overlaps A[[2]] A[[3]] Warning: ggrepel: 6 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"sessionInfo","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"","code":"sessionInfo() R version 4.4.0 (2024-04-24) Platform: x86_64-pc-linux-gnu Running under: Ubuntu 22.04.4 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8         [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8     [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     time zone: UTC tzcode source: system (glibc)  attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] car_3.1-2        carData_3.0-5    pander_0.6.5     gridExtra_2.3    [5] limpca_0.99.9    ggplot2_3.5.1    BiocStyle_2.31.0  loaded via a namespace (and not attached):  [1] SummarizedExperiment_1.33.3 gtable_0.3.5                 [3] xfun_0.43                   bslib_0.7.0                  [5] ggrepel_0.9.5               Biobase_2.63.1               [7] lattice_0.22-6              vctrs_0.6.5                  [9] tools_4.4.0                 generics_0.1.3              [11] parallel_4.4.0              stats4_4.4.0                [13] tibble_3.2.1                fansi_1.0.6                 [15] highr_0.10                  pkgconfig_2.0.3             [17] Matrix_1.7-0                tidyverse_2.0.0             [19] desc_1.4.3                  S4Vectors_0.41.7            [21] lifecycle_1.0.4             GenomeInfoDbData_1.2.12     [23] farver_2.1.1                stringr_1.5.1               [25] compiler_4.4.0              textshaping_0.3.7           [27] munsell_0.5.1               ggsci_3.0.3                 [29] codetools_0.2-20            GenomeInfoDb_1.39.14        [31] htmltools_0.5.8.1           sass_0.4.9                  [33] yaml_2.3.8                  tidyr_1.3.1                 [35] pillar_1.9.0                pkgdown_2.0.9               [37] crayon_1.5.2                jquerylib_0.1.4             [39] cachem_1.0.8                DelayedArray_0.29.9         [41] iterators_1.0.14            abind_1.4-5                 [43] foreach_1.5.2               tidyselect_1.2.1            [45] digest_0.6.35               stringi_1.8.3               [47] reshape2_1.4.4              dplyr_1.1.4                 [49] purrr_1.0.2                 bookdown_0.39               [51] labeling_0.4.3              fastmap_1.1.1               [53] grid_4.4.0                  colorspace_2.1-0            [55] cli_3.6.2                   SparseArray_1.3.5           [57] magrittr_2.0.3              S4Arrays_1.3.7              [59] utf8_1.2.4                  withr_3.0.0                 [61] scales_1.3.0                UCSC.utils_0.99.7           [63] rmarkdown_2.26              XVector_0.43.1              [65] httr_1.4.7                  matrixStats_1.3.0           [67] ragg_1.3.0                  memoise_2.0.1               [69] evaluate_0.23               knitr_1.46                  [71] GenomicRanges_1.55.4        IRanges_2.37.1              [73] doParallel_1.0.17           rlang_1.1.3                 [75] Rcpp_1.0.12                 glue_1.7.0                  [77] BiocManager_1.30.22         BiocGenerics_0.49.1         [79] jsonlite_1.8.8              plyr_1.8.9                  [81] R6_2.5.1                    MatrixGenerics_1.15.1       [83] systemfonts_1.0.6           fs_1.6.3                    [85] zlibbioc_1.49.3"},{"path":"https://manonmartin.github.io/limpca/articles/Trout.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Application of `limpca` on the Trout transcriptomic dataset.","text":"Benaiche, N., (2022), Stabilisation R package LMWiRe – Linear Models Wide Responses. UCLouvain, http://hdl.handle.net/2078.1/thesis:33996 Cornet, V., Ouaach, ., Mandiki, S., Flamion, E., Ferain, ., Van Larebeke, M., Lemaire, B., Reyes Lopez F., Tort, L., Larondelle, Y. Kestemont, P., (2018), Environmentally-realistic concentration cadmium combined polyunsaturated fatty acids enriched diets modulated non-specific immunity rainbow trout. Aquatic Toxicology, 196, 104–116. https://doi.org/10.1016/j.aquatox.2018.01.012 Thiel, M., Feraud, B. Govaerts, B. (2017), ASCA+ APCA+: exten- sions ASCA APCA analysis unbalanced multifactorial designs. Journal Chemometrics. 31 https://doi.org/10.1002/cem.2895","code":""},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"model used example three-way ANOVA fixed effects. document presents usual steps analysis, importing data visualising results. Details methods used package implementation can found articles Thiel, Féraud, Govaerts (2017), Guisset, Martin, Govaerts (2019) Thiel et al. (2023).","code":""},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"installation-and-loading-of-the-limpca-package","dir":"Articles","previous_headings":"","what":"Installation and loading of the limpca package","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"limpca can installed Bioconductor: loaded R session:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"limpca\") library(\"limpca\")"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"data-import","dir":"Articles","previous_headings":"","what":"Data import","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"order use limpca core functions, data need formatted list (informally called lmpDataList) following elements: outcomes (multivariate matrix), design (data.frame) formula (character string). UCH data set already formatted appropriately can loaded limpca data function. Alternatively, lmpDataList can created function data2LmpDataList : scratch: SummarizedExperiment: SummarizedExperiment generic data container stores rectangular matrices experimental results. See Morgan et al. (2023) information.","code":"data(\"UCH\")  str(UCH) List of 3  $ design  :'data.frame':   34 obs. of  5 variables:   ..$ Hippurate: Factor w/ 3 levels \"0\",\"1\",\"2\": 1 1 1 1 1 1 2 2 2 2 ...   ..$ Citrate  : Factor w/ 3 levels \"0\",\"2\",\"4\": 1 1 2 2 3 3 1 1 2 2 ...   ..$ Dilution : Factor w/ 1 level \"diluted\": 1 1 1 1 1 1 1 1 1 1 ...   ..$ Day      : Factor w/ 2 levels \"2\",\"3\": 1 1 1 1 1 1 1 1 1 1 ...   ..$ Time     : Factor w/ 2 levels \"1\",\"2\": 1 2 1 2 1 2 1 2 1 2 ...  $ outcomes: num [1:34, 1:600] 0.0312 0.0581 0.027 0.0341 0.0406 ...   ..- attr(*, \"dimnames\")=List of 2   .. ..$   : chr [1:34] \"M2C00D2R1\" \"M2C00D2R2\" \"M2C02D2R1\" \"M2C02D2R2\" ...   .. ..$ X1: chr [1:600] \"9.9917004\" \"9.9753204\" \"9.9590624\" \"9.9427436\" ...  $ formula : chr \"outcomes ~ Hippurate + Citrate + Time + Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time\" UCH2 <- data2LmpDataList(    outcomes = UCH$outcomes,    design = UCH$design,     formula = UCH$formula  ) | dim outcomes: 34x600 | formula: ~ Hippurate + Citrate + Time + Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time | design variables (5):  * Hippurate (factor) * Citrate (factor) * Dilution (factor) * Day (factor) * Time (factor) se <- SummarizedExperiment(    assays = list(      counts = t(UCH$outcomes)), colData = UCH$design,    metadata = list(formula = UCH$formula)  )  UCH3 <- data2LmpDataList(se, assay_name = \"counts\") | dim outcomes: 34x600 | formula: ~ Hippurate + Citrate + Time + Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time | design variables (5):  * Hippurate (factor) * Citrate (factor) * Dilution (factor) * Day (factor) * Time (factor)"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"data-exploration","dir":"Articles","previous_headings":"","what":"Data exploration","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"UCH (Urine-Citrate-Hippurate) data set described Thiel, Féraud, Govaerts (2017) Guisset, Martin, Govaerts (2019) issued form metabolomics experiment. experiment, 36 samples pool rat urine samples spiked two molecules Citrate Hippurate according \\(3^2\\) full factorial design quantities two molecules. spiked samples analyzed 1H NMR two different time defrozing two different days. Two spectra finally missing end experiment. UCH data set list containing 2 elements: outcomes matrix 34 observations 600 response variables representing spectra 1H NMR spectroscopy, design matrix 34 observations 4 explanatory variables formula general linear model estimated added list . purpose example, 3 factors interest studied : concentrations Hippurate Citrate Time defrozing. limpca functions available data exploration.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"design","dir":"Articles","previous_headings":"Data exploration","what":"Design","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"design matrix contains information observation four variables: Hippurate, Citrate, Day Time. 3 variables used model. function plotDesign useful visualise design.  plot confirms design full 3x3x2 factorial design replicated twice 2 missing values. Hence, design balanced.","code":"pander(head(UCH$design)) plotDesign(     design = UCH$design, x = \"Hippurate\",     y = \"Citrate\", rows = \"Time\",     title = \"Design of the UCH dataset\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"outcomes-visualization","dir":"Articles","previous_headings":"Data exploration","what":"Outcomes visualization","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"600 response (outcomes) variables represent, observation, intensities 1H NMR spectra. spectra can visualized plotLine function.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"plotline-function","dir":"Articles","previous_headings":"Data exploration > Outcomes visualization","what":"plotLine function","title":"Application of `limpca` on the UCH metabolomics dataset.","text":", annotations (cit_peaks hip_peaks) added ggplot objects order highlight Hippurate (green) Citrate (red) peaks.","code":"p1 <- plotLine(     Y = UCH$outcomes,     title = \"H-NMR spectrum\",     rows = c(3),     xlab = \"ppm\",     ylab = \"Intensity\" )  cit_peaks <- annotate(\"rect\",     xmin = c(2.509), xmax = c(2.709),     ymin = -Inf, ymax = Inf, alpha = 0.2,     fill = c(\"tomato\") )  hip_peaks <- annotate(\"rect\",     xmin = c(7.458, 3.881), xmax = c(7.935, 4.041),     ymin = -Inf, ymax = Inf, alpha = 0.2,     fill = c(\"yellowgreen\") )  p1 <- plotLine(     Y = UCH$outcomes,     title = \"H-NMR spectrum\",     rows = c(3),     xlab = \"ppm\",     ylab = \"Intensity\" )  p1 + cit_peaks + hip_peaks"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"plotscatter-function","dir":"Articles","previous_headings":"Data exploration > Outcomes visualization","what":"plotScatter function","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"plotScatter function enables visualize values two outcomes variables different colors markers values design factors. , used show \\(3^2\\) factorial design can recovered intensities Hippurate Citrate peaks spectra.","code":"# xy corresponds to citrate (453) and hippurate peaks (369) plotScatter(     Y = UCH$outcomes,     xy = c(453, 369),     design = UCH$design,     color = \"Hippurate\",     shape = \"Citrate\" ) # Or refering to the variables names (ppm values here) plotScatter(     Y = UCH$outcomes,     xy = c(\"2.6092056\", \"3.9811536\"),     design = UCH$design,     color = \"Hippurate\",     shape = \"Citrate\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"plotscatterm-function","dir":"Articles","previous_headings":"Data exploration > Outcomes visualization","what":"plotScatterM function","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"plotScatter function allows visualize values series outcomes variables different colors markers values design factors. , done 4 peaks Hippurate single peak Citrate.","code":"plotScatterM(     Y = UCH$outcomes, cols = c(133, 145, 150, 369, 453),     design = UCH$design, varname.colorup = \"Hippurate\",     varname.colordown = \"Citrate\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"plotmeans-function","dir":"Articles","previous_headings":"Data exploration > Outcomes visualization","what":"plotMeans function","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"plotMeans represents mean values response variable different levels design factors. show evolution Citrate peak height respect three design factors interest. Note results function must interpreted caution unbalanced designs simple means biased estimators expected means.","code":"plotMeans(     Y = UCH$outcomes,     design = UCH$design,     cols = c(453),     x = c(\"Citrate\"),     w = c(\"Hippurate\"),     z = c(\"Time\"),     ylab = \"Intensity\",     title = c(\"Mean reponse for main Citrate peak\") ) $`2.6092056`"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"pca","dir":"Articles","previous_headings":"Data exploration","what":"PCA","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"function pcaBySvd useful compute Principal Component Analysis (PCA) decomposition outcomes matrix. Several functions can applied output value pcaBySvd: pcaScreePlot obtaine scree plot pcaLoading1dPlot loading plots pcaScorePlot score plots  score plots indicate tree factors design affect spectral profiles, clearly highlighted ASCA APCA.    first two loading plots, mixture Citrate Hippurate peaks already appears separated.","code":"ResPCA <- pcaBySvd(UCH$outcomes) pcaScreePlot(ResPCA, nPC = 6) pcaScorePlot(     resPcaBySvd = ResPCA, axes = c(1, 2),     title = \"PCA scores plot: PC1 and PC2\",     design = UCH$design,     color = \"Hippurate\", shape = \"Citrate\",     points_labs_rn = FALSE ) pcaScorePlot(     resPcaBySvd = ResPCA, axes = c(1, 2),     title = \"PCA scores plot: PC1 and PC2\",     design = UCH$design,     color = \"Time\", shape = \"Hippurate\",     points_labs_rn = FALSE ) pcaScorePlot(     resPcaBySvd = ResPCA, axes = c(3, 4),     title = \"PCA scores plot: PC3 and PC4\",     design = UCH$design,     color = \"Time\", shape = \"Citrate\",     points_labs_rn = FALSE ) p2 <- pcaLoading1dPlot(     resPcaBySvd = ResPCA, axes = c(1, 2),     title = \"PCA loadings plot UCH\", xlab = \"ppm\",     ylab = \"Intensity\" )  p2 + hip_peaks + cit_peaks"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"application-of-asca-and-apca","dir":"Articles","previous_headings":"","what":"Application of ASCA+ and APCA+","title":"Application of `limpca` on the UCH metabolomics dataset.","text":", ASCA+ APCA+ steps illustrated UCH data set. following graph represents steps methodology. next graph presents functions available limpca purpose. illustrated next sections.","code":""},{"path":[]},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"model-formula","dir":"Articles","previous_headings":"Model estimation and effect matrix decomposition","what":"Model formula","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"formula ANOVA-GLM model used analysis 3 ways crossed ANOVA model:","code":"UCH$formula <- \"outcomes ~ Hippurate + Citrate + Time + Hippurate:Citrate +                   Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time\""},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"model-matrix-generation","dir":"Articles","previous_headings":"Model estimation and effect matrix decomposition","what":"Model matrix generation","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"first step ASCA+ build (GLM) model matrix experimental design matrix model. factor reencoded multiple binary variables using contr.sum coding. size model matrix 34xp p total number parameters ANOVA model one response. function lmpModelMatrix encodes design matrix model matrix. Table continues Table continues Table continues Table continues Table continues ","code":"resLmpModelMatrix <- lmpModelMatrix(UCH) pander::pander(head(resLmpModelMatrix$modelMatrix))"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"model-estimation-and-effect-matrices-decomposition","dir":"Articles","previous_headings":"Model estimation and effect matrix decomposition","what":"Model estimation and effect matrices decomposition","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"lmpEffectMatrices used estimate linear model decomposes multivariate outcomes effect matrices every model term. function calculates also type III effect contributions (%) generates barpot visualise contributions.","code":"resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix)"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"effects-importance","dir":"Articles","previous_headings":"Model estimation and effect matrix decomposition","what":"Effects importance","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"contributions effect outputted lmpEffectMatrices. Table continues ","code":"pander(resLmpEffectMatrices$variationPercentages) resLmpEffectMatrices$varPercentagesPlot"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"bootstrap-tests-and-quantification-of-effects-importance","dir":"Articles","previous_headings":"Model estimation and effect matrix decomposition","what":"Bootstrap tests and quantification of effects importance","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"lmpBootstrapTests applies parametric bootstrap test determine whether effect significant . recommend user choose first small value nboot (e.g. nboot=100) develop code increase later (e.g. nboot=1000) order get accurate value p-values. Table continues Table continues ","code":"resLmpBootstrapTests <-     lmpBootstrapTests(         resLmpEffectMatrices = resLmpEffectMatrices,         nboot = 100     )  # Print P-values pander::pander(t(resLmpBootstrapTests$resultsTable))"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"ascaapcaasca-e-decomposition","dir":"Articles","previous_headings":"","what":"ASCA/APCA/ASCA-E decomposition","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"ASCA/APCA/ASCA-E decomposition enables represent information effect matrices space reduced dimension PCA. function lmpPcaEffects method argument define method use, namely ASCA, APCA ASCA-E. Combined effects matrices can also built visualized PCA.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"asca","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition","what":"ASCA","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"ASCA method performs PCA pure effect matrices. combined effect matrix Hippurate+Time+Hippurate:Time also built.","code":"resASCA <- lmpPcaEffects(     resLmpEffectMatrices = resLmpEffectMatrices,     method = \"ASCA\",     combineEffects = list(c(         \"Hippurate\", \"Time\",         \"Hippurate:Time\"     )) )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"contributions","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA","what":"Contributions","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"contribution principal component effects calculated reported different tables plots function lmpContributions. tables : totalContribTable: Table contribution effect total variance percentage outputted lmpEffectMatrices. effectTable: Table percentage variance explained Principal Component model effect decomposition. combinedEffectTable: Equivalent previous effectTable combination effects mentioned lmpPcaEffects, Hippurate+Time+Hippurate:Time. contribTable: Table percentage variance explained Principal Component effect reported percentage contribution given effect total variance. table gives overview importance PC regardless effects. Moreover lmpContributions also produces barplot either ordered contributions per effect (plotTotal) across PCs different effects (plotContrib). Ordered contributions per effect:  PC different effects:  following analysis, focus first PC three main effects, interaction Hippurate:Time residuals since PCs effects account less 1% total variance.","code":"resLmpContributions <- lmpContributions(resASCA) pander::pander(resLmpContributions$totalContribTable) pander::pander(resLmpContributions$effectTable) pander::pander(resLmpContributions$combinedEffectTable) pander::pander(resLmpContributions$contribTable) pander(\"Ordered contributions per effect:\") resLmpContributions$plotTotal pander(\"For each PC of the different effects:\") resLmpContributions$plotContrib"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"scores-and-loadings-plots","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA","what":"Scores and loadings Plots","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"loadings can represented either line plot function lmpLoading1dPlot conveniently compare original spectral profiles scatterplot function lmpLoading2dPlot. create object including loading plots (line plots) effects included model well combined effect residuals. score matrices represented two components time scatterplot function lmpScorePlot.","code":"all_loadings_pl <- lmpLoading1dPlot(resASCA,     effectNames = c(         \"Hippurate\", \"Citrate\", \"Time\",         \"Hippurate:Time\",         \"Hippurate+Time+Hippurate:Time\",         \"Residuals\"     ),     axes = 1, xlab = \"ppm\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"main-effects","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Scores and loadings Plots","what":"Main effects","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"scores loadings main effects included model represented . show , thank ASCA analysis, Hippurate Citrate peaks clearly separately retrieved respective loading plots compared classical PCA (see Section @ref(pca)) peaks two chemicals present two first PCs. loading profile Time effect shows high peak left side removed water area.","code":"# Hippurate hip_scores_pl <- lmpScorePlot(resASCA,     effectNames = \"Hippurate\",     color = \"Hippurate\", shape = \"Hippurate\" )  hip_loadings_pl <- all_loadings_pl$Hippurate + hip_peaks  grid.arrange(hip_scores_pl, hip_loadings_pl, ncol = 2) # Citrate cit_scores_pl <- lmpScorePlot(resASCA,     effectNames = \"Citrate\",     color = \"Citrate\", shape = \"Citrate\" ) cit_loadings_pl <- all_loadings_pl$Citrate + cit_peaks  grid.arrange(cit_scores_pl, cit_loadings_pl, ncol = 2) # Time tim_scores_pl <- lmpScorePlot(resASCA,     effectNames = \"Time\", color = \"Time\",     shape = \"Time\" ) Warning in FUN(X[[i]], ...): The variance of PC2 is inferior to 1%. Graph scaled time_peaks <- annotate(\"rect\",     xmin = c(5.955364), xmax = c(6.155364),     ymin = -Inf, ymax = Inf, alpha = 0.2,     fill = c(\"royalblue\") )  tim_loadings_pl <- all_loadings_pl$Time + time_peaks  grid.arrange(tim_scores_pl, tim_loadings_pl, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"interaction-hippuratetime","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Scores and loadings Plots","what":"Interaction Hippurate:Time","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"scores loadings fot interaction term represented . straighforward interpret scores plot interaction term loadings PC1 indicate shift spectrum, along whole spectral profile (mostly around 3 ppm).","code":"# Hippurate:Time hiptim_scores_pl <- lmpScorePlot(resASCA,     effectNames = \"Hippurate:Time\",     color = \"Hippurate\", shape = \"Time\" ) hiptim_loadings_pl <- all_loadings_pl$`Hippurate:Time` +     time_peaks +     hip_peaks  grid.arrange(hiptim_scores_pl, hiptim_loadings_pl, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"combination-of-effects-hippuratetimehippuratetime","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Scores and loadings Plots","what":"Combination of effects Hippurate+Time+Hippurate:Time","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"scores loadings combination effects, case \"Hippurate+Time+Hippurate:Time\" can also visualised.  However, note better graphical representation possible function lmpEffectPlot (see Section @ref(effects-plot)) depict interaction terms combinations effects.","code":"# Hippurate+Time+Hippurate:Time hiptimInter_scores_pl <- lmpScorePlot(resASCA,     effectNames = \"Hippurate+Time+Hippurate:Time\",     color = \"Hippurate\", shape = \"Time\" )  hiptimInter_loadings_pl <- all_loadings_pl$`Hippurate:Time` +     time_peaks + hip_peaks  grid.arrange(hiptimInter_scores_pl, hiptimInter_loadings_pl, ncol = 2)"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"model-residuals","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Scores and loadings Plots","what":"Model residuals","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"PCA model residuals can also applied spot outliers unexpected underlying structure data. scores plot shows effect Day, excluded modeling step, included well spans two first PCs residuals.","code":"resid_scores_pl <- lmpScorePlot(resASCA,     effectNames = \"Residuals\",     color = \"Day\", shape = \"Day\",     drawShapes = \"segment\" )   resid_loadings_pl <- all_loadings_pl$Residuals  grid.arrange(resid_scores_pl, resid_loadings_pl, ncol = 2)"},{"path":[]},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"scores-scatter-plot","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Other graphs","what":"Scores scatter plot","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"can also represent scores matrix plots lmpScoreScatterPlotM. graph advantage compare 2 variables simultaneously. example, PC1 scores Hippurate Citrate clearly represent orthogonal design experiment. interaction Hippurate:Time can also clearly represented comparing les PC1s Hippurate interaction term.","code":"lmpScoreScatterPlotM(resASCA,     PCdim = c(1, 1, 1, 1, 1, 1, 1, 2),     modelAbbrev = TRUE,     varname.colorup = \"Citrate\",     varname.colordown = \"Time\",     varname.pchup = \"Hippurate\",     varname.pchdown = \"Time\",     title = \"ASCA scores scatterplot matrix\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"d-loadings","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Other graphs","what":"2D Loadings","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"Finally loadings can also represented 2--2 scatterplot lmpLoading2dPlot. graphic course limited interest spectral data.","code":"lmpLoading2dPlot(     resLmpPcaEffects = resASCA,     effectNames = c(\"Hippurate\"),     axes = c(1, 2),     addRownames = TRUE, pl_n = 10 ) Warning: ggrepel: 1 unlabeled data points (too many overlaps). Consider increasing max.overlaps # adding manually labels to points for the Hippurate peaks labels <- substr(colnames(UCH$outcomes), 1, 4) labels[-c(369, 132, 150, 133, 149, 144, 145, 368, 151)] <- \"\"  lmpLoading2dPlot(     resLmpPcaEffects = resASCA,     effectNames = c(\"Hippurate\"),     axes = c(1, 2), points_labs = labels ) Warning: ggrepel: 1 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"effects-plot","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA","what":"Effects plot","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"lmpEffectPlot function particularly interesting visualise interaction term combination effects. Note function can applied ASCA method.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"main-effects-for-hippurate","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Effects plot","what":"Main effects for Hippurate","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"first PC Hippurate represented along levels effect showing expected linear effect Hippurate dose PC value.","code":"lmpEffectPlot(resASCA, effectName = \"Hippurate\", x = \"Hippurate\")"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"interaction-hippuratetime-1","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Effects plot","what":"Interaction Hippurate:Time","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"interesting application visualization interaction terms line plots, Hippurate:Time along Hippurate Time effect. representation gives impression quite important interaction effect.","code":"lmpEffectPlot(resASCA,     effectName = \"Hippurate:Time\",     x = \"Hippurate\", z = \"Time\" ) lmpEffectPlot(resASCA,     effectName = \"Hippurate:Time\",     x = \"Time\", z = \"Hippurate\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"combination-of-effects-hippuratetimehippuratetime-1","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA > Effects plot","what":"Combination of effects Hippurate+Time+Hippurate:Time","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"alternative visualisation interaction combines main effects Hippurate, Time interaction Hippurate:Time. Even significant, interaction effect actually quite small compared main effects (Hippurate PC1 Time PC2).","code":"lmpEffectPlot(resASCA,     effectName = \"Hippurate+Time+Hippurate:Time\",     x = \"Hippurate\", z = \"Time\" ) lmpEffectPlot(resASCA,     effectName = \"Hippurate+Time+Hippurate:Time\",     axes = c(2), x = \"Time\", z = \"Hippurate\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"apca","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition","what":"APCA","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"APCA method performs PCA effect matrices augmented residuals. functions already used ASCA can applied.","code":"resAPCA <- lmpPcaEffects(     resLmpEffectMatrices = resLmpEffectMatrices,     method = \"APCA\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"scores-plot","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > APCA","what":"Scores Plot","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"Different shapes drawShapes argument highlight data structure recovery.        scatterplot matrix can also applied visualise relationship scores profiles interest.","code":"# Hippurate main effect lmpScorePlot(resAPCA,     effectNames = \"Hippurate\",     color = \"Hippurate\", shape = \"Hippurate\", drawShapes = \"ellipse\" ) # Citrate main effect lmpScorePlot(resAPCA,     effectNames = \"Citrate\",     color = \"Citrate\", shape = \"Citrate\", drawShapes = \"ellipse\" ) # Time main effect lmpScorePlot(resAPCA,     effectNames = \"Time\",     color = \"Time\", shape = \"Time\", drawShapes = \"ellipse\" ) lmpScorePlot(resAPCA,     effectNames = \"Time\",     color = \"Time\", shape = \"Time\", drawShapes = \"polygon\" ) lmpScorePlot(resAPCA,     effectNames = \"Time\",     color = \"Time\", shape = \"Time\", drawShapes = \"segment\" ) # Interaction term lmpScorePlot(resAPCA,     effectNames = \"Hippurate:Time\",     color = \"Hippurate\", shape = \"Time\", drawShapes = \"segment\" ) lmpScorePlot(resAPCA,     effectNames = \"Hippurate:Time\",     color = \"Hippurate\", shape = \"Time\", drawShapes = \"polygon\" ) lmpScoreScatterPlotM(resAPCA,     effectNames = c(         \"Hippurate\", \"Citrate\", \"Time\",         \"Hippurate:Time\"     ),     modelAbbrev = TRUE,     varname.colorup = \"Citrate\",     varname.colordown = \"Time\",     varname.pchup = \"Hippurate\",     varname.pchdown = \"Time\",     title = \"APCA scores scatterplot matrix\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"loadings-plot","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > APCA","what":"Loadings plot","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"Note APCA loadings contain residuals model differ ASCA loadings respect.","code":"lmpLoading1dPlot(resAPCA, effectNames = c(     \"Hippurate\", \"Citrate\",     \"Time\", \"Hippurate:Time\" ), axes = 1) $Hippurate $Citrate $Time $`Hippurate:Time`"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"asca-e","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition","what":"ASCA-E","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"ASCA-E method performs PCA pure effect matrices projects effect matrices augmented residuals PC obtained. contributions loadings identical ASCA results.","code":"resASCAE <- lmpPcaEffects(     resLmpEffectMatrices = resLmpEffectMatrices,     method = \"ASCA-E\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"scores-plot-1","dir":"Articles","previous_headings":"ASCA/APCA/ASCA-E decomposition > ASCA-E","what":"Scores Plot","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"main effects, score plots show clear separation different levels considered effects first PC. separation groups suggests strong effect factors, confirmed significance.     , scores profiles can compared 2 2 ASCA-E.","code":"lmpScorePlot(resASCAE,     effectNames = \"Hippurate\",     color = \"Hippurate\", shape = \"Hippurate\" ) lmpScorePlot(resASCAE,     effectNames = \"Citrate\",     color = \"Citrate\", shape = \"Citrate\" ) lmpScorePlot(resASCAE,     effectNames = \"Time\",     color = \"Time\", shape = \"Time\" ) Warning in FUN(X[[i]], ...): The variance of PC2 is inferior to 1%. Graph scaled lmpScorePlot(resASCAE,     effectNames = \"Hippurate:Time\",     color = \"Hippurate\", shape = \"Time\" ) lmpScoreScatterPlotM(resASCAE,     effectNames = c(         \"Hippurate\", \"Citrate\", \"Time\",         \"Hippurate:Time\"     ),     modelAbbrev = TRUE,     varname.colorup = \"Citrate\",     varname.colordown = \"Time\",     varname.pchup = \"Hippurate\",     varname.pchdown = \"Time\",     title = \"ASCA-E scores scatterplot matrix\" )"},{"path":"https://manonmartin.github.io/limpca/articles/UCH.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"sessionInfo","title":"Application of `limpca` on the UCH metabolomics dataset.","text":"","code":"sessionInfo() R version 4.4.0 (2024-04-24) Platform: x86_64-pc-linux-gnu Running under: Ubuntu 22.04.4 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8         [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8     [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     time zone: UTC tzcode source: system (glibc)  attached base packages: [1] stats4    stats     graphics  grDevices utils     datasets  methods   [8] base       other attached packages:  [1] limpca_0.99.9               SummarizedExperiment_1.33.3  [3] Biobase_2.63.1              GenomicRanges_1.55.4         [5] GenomeInfoDb_1.39.14        IRanges_2.37.1               [7] S4Vectors_0.41.7            BiocGenerics_0.49.1          [9] MatrixGenerics_1.15.1       matrixStats_1.3.0           [11] gridExtra_2.3               ggplot2_3.5.1               [13] pander_0.6.5                BiocStyle_2.31.0             loaded via a namespace (and not attached):  [1] gtable_0.3.5            xfun_0.43               bslib_0.7.0              [4] ggrepel_0.9.5           lattice_0.22-6          vctrs_0.6.5              [7] tools_4.4.0             generics_0.1.3          parallel_4.4.0          [10] tibble_3.2.1            fansi_1.0.6             highr_0.10              [13] pkgconfig_2.0.3         Matrix_1.7-0            tidyverse_2.0.0         [16] desc_1.4.3              lifecycle_1.0.4         GenomeInfoDbData_1.2.12 [19] farver_2.1.1            stringr_1.5.1           compiler_4.4.0          [22] textshaping_0.3.7       munsell_0.5.1           ggsci_3.0.3             [25] codetools_0.2-20        htmltools_0.5.8.1       sass_0.4.9              [28] yaml_2.3.8              tidyr_1.3.1             pillar_1.9.0            [31] pkgdown_2.0.9           crayon_1.5.2            jquerylib_0.1.4         [34] cachem_1.0.8            DelayedArray_0.29.9     iterators_1.0.14        [37] abind_1.4-5             foreach_1.5.2           tidyselect_1.2.1        [40] digest_0.6.35           stringi_1.8.3           reshape2_1.4.4          [43] dplyr_1.1.4             purrr_1.0.2             bookdown_0.39           [46] labeling_0.4.3          fastmap_1.1.1           grid_4.4.0              [49] colorspace_2.1-0        cli_3.6.2               SparseArray_1.3.5       [52] magrittr_2.0.3          S4Arrays_1.3.7          utf8_1.2.4              [55] withr_3.0.0             scales_1.3.0            UCSC.utils_0.99.7       [58] rmarkdown_2.26          XVector_0.43.1          httr_1.4.7              [61] ragg_1.3.0              memoise_2.0.1           evaluate_0.23           [64] knitr_1.46              doParallel_1.0.17       rlang_1.1.3             [67] Rcpp_1.0.12             glue_1.7.0              BiocManager_1.30.22     [70] jsonlite_1.8.8          plyr_1.8.9              R6_2.5.1                [73] systemfonts_1.0.6       fs_1.6.3                zlibbioc_1.49.3"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"about-the-package","dir":"Articles","previous_headings":"Introduction","what":"About the package","title":"Get started with limpca.","text":"package created analyse models high-dimensional data multi-factor design experiment. limpca stands linear modeling high-dimensional designed data based ASCA (ANOVA-Simultaneous Component Analysis) APCA (ANOVA-Principal Component Analysis) family methods. methods combine ANOVA General Linear Model (GLM) decomposition PCA. provide powerful visualization tools multivariate structures space effect statistical model linked experimental design. Details methods used package implementation can found articles Thiel, Féraud, Govaerts (2017), Guisset, Martin, Govaerts (2019) Thiel et al. (2023). Therefore, ASCA/APCA highly informative modeling visualisation tools analyse -omics data tables multivariate framework act complement differential expression analyses methods limma (Ritchie et al. (2015)).","code":""},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"vignettes-description","dir":"Articles","previous_headings":"Introduction","what":"Vignettes description","title":"Get started with limpca.","text":"Get started limpca (vignette): vignette short application limpca UCH dataset data visualisation, exploration (PCA), GLM decomposition ASCA modelling. ASCA model used example three-way ANOVA fixed effects. Analysis UCH dataset limpca: vignette extensive application limpca UCH dataset data visualisation, exploration (PCA), GLM decomposition ASCA/APCA/ASCA-E modelling. models used example three-way ANOVAs fixed effects. document presents usual steps analysis, importing data visualising results. Analysis Trout dataset limpca: vignette extensive application limpca Trout dataset data visualisation, exploration (PCA), GLM decomposition ASCA/APCA/ASCA-E modelling. also compares results ASCA univariate ANOVA modeling. models used involve three main effects two way interaction terms.","code":""},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"installation-and-loading-of-the-limpca-package","dir":"Articles","previous_headings":"","what":"Installation and loading of the limpca package","title":"Get started with limpca.","text":"limpca can installed Bioconductor: loaded R session: enquiry, can send email package authors: bernadette.govaerts@uclouvain.; michel.thiel@uclouvain.manon.martin@uclouvain.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"limpca\") library(\"limpca\")"},{"path":[]},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"data-object","dir":"Articles","previous_headings":"Short application on the UCH dataset","what":"Data object","title":"Get started with limpca.","text":"order use limpca core functions, data need formatted list (informally called lmpDataList) following elements: outcomes (multivariate matrix), design (data.frame) formula (character string). UCH data set already formatted appropriately can loaded limpca data function. Alternatively, lmpDataList can created function data2LmpDataList : scratch: SummarizedExperiment: SummarizedExperiment generic data container stores rectangular matrices experimental results. See Morgan et al. (2023) information.","code":"data(\"UCH\") str(UCH) #> List of 3 #>  $ design  :'data.frame':    34 obs. of  5 variables: #>   ..$ Hippurate: Factor w/ 3 levels \"0\",\"1\",\"2\": 1 1 1 1 1 1 2 2 2 2 ... #>   ..$ Citrate  : Factor w/ 3 levels \"0\",\"2\",\"4\": 1 1 2 2 3 3 1 1 2 2 ... #>   ..$ Dilution : Factor w/ 1 level \"diluted\": 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ Day      : Factor w/ 2 levels \"2\",\"3\": 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ Time     : Factor w/ 2 levels \"1\",\"2\": 1 2 1 2 1 2 1 2 1 2 ... #>  $ outcomes: num [1:34, 1:600] 0.0312 0.0581 0.027 0.0341 0.0406 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$   : chr [1:34] \"M2C00D2R1\" \"M2C00D2R2\" \"M2C02D2R1\" \"M2C02D2R2\" ... #>   .. ..$ X1: chr [1:600] \"9.9917004\" \"9.9753204\" \"9.9590624\" \"9.9427436\" ... #>  $ formula : chr \"outcomes ~ Hippurate + Citrate + Time + Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time\" UCH2 <- data2LmpDataList(    outcomes = UCH$outcomes,    design = UCH$design,     formula = UCH$formula  ) #> | dim outcomes: 34x600 #> | formula: ~ Hippurate + Citrate + Time + Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time #> | design variables (5):  #> * Hippurate (factor) #> * Citrate (factor) #> * Dilution (factor) #> * Day (factor) #> * Time (factor) se <- SummarizedExperiment(    assays = list(      counts = t(UCH$outcomes)), colData = UCH$design,    metadata = list(formula = UCH$formula)  )  UCH3 <- data2LmpDataList(se, assay_name = \"counts\") #> | dim outcomes: 34x600 #> | formula: ~ Hippurate + Citrate + Time + Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time #> | design variables (5):  #> * Hippurate (factor) #> * Citrate (factor) #> * Dilution (factor) #> * Day (factor) #> * Time (factor)"},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"data-visualisation","dir":"Articles","previous_headings":"Short application on the UCH dataset","what":"Data visualisation","title":"Get started with limpca.","text":"design can visualised plotDesign().","code":"# design plotDesign(     design = UCH$design, x = \"Hippurate\",     y = \"Citrate\", rows = \"Time\",     title = \"Design of the UCH dataset\" ) # row 3 of outcomes plotLine(     Y = UCH$outcomes,     title = \"H-NMR spectrum\",     rows = c(3),     xlab = \"ppm\",     ylab = \"Intensity\" )"},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"pca","dir":"Articles","previous_headings":"Short application on the UCH dataset","what":"PCA","title":"Get started with limpca.","text":"","code":"ResPCA <- pcaBySvd(UCH$outcomes) pcaScreePlot(ResPCA, nPC = 6) pcaScorePlot(     resPcaBySvd = ResPCA, axes = c(1, 2),     title = \"PCA scores plot: PC1 and PC2\",     design = UCH$design,     color = \"Hippurate\", shape = \"Citrate\",     points_labs_rn = FALSE )"},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"model-estimation-and-effect-matrix-decomposition","dir":"Articles","previous_headings":"Short application on the UCH dataset","what":"Model estimation and effect matrix decomposition","title":"Get started with limpca.","text":"","code":"# Model matrix generation resMM <- lmpModelMatrix(UCH)  # Model estimation and effect matrices decomposition resEM <- lmpEffectMatrices(resMM)"},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"effect-matrix-test-of-significance-and-importance-measure","dir":"Articles","previous_headings":"Short application on the UCH dataset","what":"Effect matrix test of significance and importance measure","title":"Get started with limpca.","text":"","code":"# Effects importance resEM$varPercentagesPlot # Bootstrap tests resBT <- lmpBootstrapTests(resLmpEffectMatrices = resEM, nboot = 100) resBT$resultsTable #>                        % of variance (T III) Bootstrap p-values #> Hippurate                              39.31             < 0.01 #> Citrate                                29.91             < 0.01 #> Time                                   16.24             < 0.01 #> Hippurate:Citrate                       1.54               0.12 #> Hippurate:Time                          6.23             < 0.01 #> Citrate:Time                            0.54               0.42 #> Hippurate:Citrate:Time                  1.68               0.08 #> Residuals                               4.30                  -"},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"asca-decomposition","dir":"Articles","previous_headings":"Short application on the UCH dataset","what":"ASCA decomposition","title":"Get started with limpca.","text":"","code":"# ASCA decomposition resASCA <- lmpPcaEffects(resLmpEffectMatrices = resEM, method = \"ASCA\")  # Scores Plot for the hippurate lmpScorePlot(resASCA,     effectNames = \"Hippurate\",     color = \"Hippurate\", shape = \"Hippurate\" ) # Loadings Plot for the hippurate lmpLoading1dPlot(resASCA,     effectNames = c(\"Hippurate\"),     axes = 1, xlab = \"ppm\" ) # Scores ScatterPlot matrix lmpScoreScatterPlotM(resASCA,     PCdim = c(1, 1, 1, 1, 1, 1, 1, 2),     modelAbbrev = TRUE,     varname.colorup = \"Citrate\",     varname.colordown = \"Time\",     varname.pchup = \"Hippurate\",     varname.pchdown = \"Time\",     title = \"ASCA scores scatterplot matrix\" )"},{"path":"https://manonmartin.github.io/limpca/articles/limpca.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"sessionInfo","title":"Get started with limpca.","text":"","code":"sessionInfo() #> R version 4.4.0 (2024-04-24) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] SummarizedExperiment_1.33.3 Biobase_2.63.1              #>  [3] GenomicRanges_1.55.4        GenomeInfoDb_1.39.14        #>  [5] IRanges_2.37.1              S4Vectors_0.41.7            #>  [7] BiocGenerics_0.49.1         MatrixGenerics_1.15.1       #>  [9] matrixStats_1.3.0           limpca_0.99.9               #> [11] BiocStyle_2.31.0            #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5            xfun_0.43               bslib_0.7.0             #>  [4] ggplot2_3.5.1           ggrepel_0.9.5           lattice_0.22-6          #>  [7] vctrs_0.6.5             tools_4.4.0             generics_0.1.3          #> [10] parallel_4.4.0          tibble_3.2.1            fansi_1.0.6             #> [13] highr_0.10              pkgconfig_2.0.3         Matrix_1.7-0            #> [16] tidyverse_2.0.0         desc_1.4.3              lifecycle_1.0.4         #> [19] GenomeInfoDbData_1.2.12 farver_2.1.1            stringr_1.5.1           #> [22] compiler_4.4.0          textshaping_0.3.7       munsell_0.5.1           #> [25] ggsci_3.0.3             codetools_0.2-20        htmltools_0.5.8.1       #> [28] sass_0.4.9              yaml_2.3.8              tidyr_1.3.1             #> [31] pkgdown_2.0.9           pillar_1.9.0            crayon_1.5.2            #> [34] jquerylib_0.1.4         DelayedArray_0.29.9     cachem_1.0.8            #> [37] iterators_1.0.14        abind_1.4-5             foreach_1.5.2           #> [40] tidyselect_1.2.1        digest_0.6.35           stringi_1.8.3           #> [43] reshape2_1.4.4          dplyr_1.1.4             purrr_1.0.2             #> [46] bookdown_0.39           labeling_0.4.3          fastmap_1.1.1           #> [49] grid_4.4.0              colorspace_2.1-0        cli_3.6.2               #> [52] SparseArray_1.3.5       magrittr_2.0.3          S4Arrays_1.3.7          #> [55] utf8_1.2.4              withr_3.0.0             scales_1.3.0            #> [58] UCSC.utils_0.99.7       rmarkdown_2.26          XVector_0.43.1          #> [61] httr_1.4.7              ragg_1.3.0              memoise_2.0.1           #> [64] evaluate_0.23           knitr_1.46              doParallel_1.0.17       #> [67] rlang_1.1.3             Rcpp_1.0.12             glue_1.7.0              #> [70] BiocManager_1.30.22     jsonlite_1.8.8          plyr_1.8.9              #> [73] R6_2.5.1                systemfonts_1.0.6       fs_1.6.3                #> [76] zlibbioc_1.49.3"},{"path":"https://manonmartin.github.io/limpca/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernadette Govaerts. Author, thesis advisor. Sebastien Franceschini. Contributor. Robin van Oirbeek. Contributor. Michel Thiel. Author. Pascal de Tullio. Data contributor. Manon Martin. Author, maintainer. Nadia Benaiche. Contributor.","code":""},{"path":"https://manonmartin.github.io/limpca/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thiel, Michel, Benaiche, Nadia, Martin, Manon, Franceschini, Sebastien, Van Oirbeek, Robin, Govaerts, Bernadette. 2023. limpca: R package linear modeling high-dimensional designed data based ASCA/APCA family methods. Journal Chemometrics. 37(7):e3482. doi:10.1002/cem.3482","code":"@Article{,   author = {Michel Thiel and Nadia Benaiche and Manon Martin and Sebastien Franceschini and Robin {Van Oirbeek} and Bernadette Govaerts},   title = {limpca: An R package for the linear modeling of high-dimensional designed data based on ASCA/APCA family of methods},   journal = {Journal of Chemometrics},   year = {2015},   volume = {37},   number = {7},   pages = {e3482},   doi = {10.1002/cem.3482}, }"},{"path":"https://manonmartin.github.io/limpca/index.html","id":"limpca","dir":"","previous_headings":"","what":"An R package for the linear modeling of high-dimensional designed data based on ASCA/APCA family of methods","title":"An R package for the linear modeling of high-dimensional designed data based on ASCA/APCA family of methods","text":"web page package can accessed : https://manonmartin.github.io/limpca/ limpca applies GLM (General Linear Model) version ASCA APCA analyse multivariate sample profiles generated experimental design. ASCA/APCA provide powerful visualization tools multivariate structures space effect statistical model linked experimental design contrarily MANOVA, can deal mutlivariate datasets variables observations. limpca presents different advantages compared software field: (1) able treat balanced unbalanced experimental design fixed categorical factors, (2) offers optimized methods calculate effect importance test significance, (3) allows user represent data ASCA/APCA results various rich ggplot2-based graphical outputs highly customizable (4) package open future extensions sophisticated statistical models.","code":""},{"path":"https://manonmartin.github.io/limpca/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for the linear modeling of high-dimensional designed data based on ASCA/APCA family of methods","text":"Installation Bioconductor:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")      BiocManager::install(\"limpca\")"},{"path":"https://manonmartin.github.io/limpca/index.html","id":"additional-information","dir":"","previous_headings":"","what":"Additional information","title":"An R package for the linear modeling of high-dimensional designed data based on ASCA/APCA family of methods","text":"enquiry, can open issue Github send email package authors: bernadette.govaerts@uclouvain.; michel.thiel@uclouvain.manon.martin@uclouvain..","code":""},{"path":"https://manonmartin.github.io/limpca/reference/UCH.html","id":null,"dir":"Reference","previous_headings":"","what":"UCH: the Urine Citrate-Hippurate metabolomic dataset — UCH","title":"UCH: the Urine Citrate-Hippurate metabolomic dataset — UCH","text":"dataset comes 1H NMR analysis urine female rats hippuric citric acid added samples different known concentrations.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/UCH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UCH: the Urine Citrate-Hippurate metabolomic dataset — UCH","text":"","code":"data(\"UCH\")"},{"path":"https://manonmartin.github.io/limpca/reference/UCH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UCH: the Urine Citrate-Hippurate metabolomic dataset — UCH","text":"list length 3: experimental design (`design`), outcomes every observations (`outcomes`) formula considered analyze data (`formula`). design data.frame experimental design 34 observations 5 explanatory variables:    Hippurate: concentration hippuric acid;    Citrate: concentration citric acid;    Dilution: dilution, samples diluted dilution rate 50 %;    Day: medium, preparation mixtures performed two series;    Time: mixture experimental condition  repeated twice. outcomes numerical matrix 34 observations 600 response variables formula character string suggested formula analyze data","code":""},{"path":"https://manonmartin.github.io/limpca/reference/UCH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UCH: the Urine Citrate-Hippurate metabolomic dataset — UCH","text":"UCH vignette can accessed : (print(vignette(topic = \"UCH\", package = \"limpca\"))). database experimentally created order control spectral locations biomarkers find (.e. Hippurate Citrate). property allows us evaluate performances data analysis various statistical methods. urine experimental database also designed order explore influence spectra intra-sample 1H NMR replications (Time), inter-day 1H NMR measurements (Day). model formula : outcomes = Hippurate + Citrate + Time +             Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time","code":""},{"path":"https://manonmartin.github.io/limpca/reference/UCH.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UCH: the Urine Citrate-Hippurate metabolomic dataset — UCH","text":"Martin, M. (2020). Uncovering informative content metabolomics data: pre-processing 1H NMR spectra biomarkers discovery multifactorial designs.  Prom.: Govaerts, B. PhD thesis. Institut de statistique, biostatistique et sciences actuarielles, UCLouvain, Belgium. http://hdl.handle.net/2078.1/227671","code":""},{"path":"https://manonmartin.github.io/limpca/reference/UCH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UCH: the Urine Citrate-Hippurate metabolomic dataset — UCH","text":"","code":"data(\"UCH\") str(UCH) #> List of 3 #>  $ design  :'data.frame':\t34 obs. of  5 variables: #>   ..$ Hippurate: Factor w/ 3 levels \"0\",\"1\",\"2\": 1 1 1 1 1 1 2 2 2 2 ... #>   ..$ Citrate  : Factor w/ 3 levels \"0\",\"2\",\"4\": 1 1 2 2 3 3 1 1 2 2 ... #>   ..$ Dilution : Factor w/ 1 level \"diluted\": 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ Day      : Factor w/ 2 levels \"2\",\"3\": 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ Time     : Factor w/ 2 levels \"1\",\"2\": 1 2 1 2 1 2 1 2 1 2 ... #>  $ outcomes: num [1:34, 1:600] 0.0312 0.0581 0.027 0.0341 0.0406 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$   : chr [1:34] \"M2C00D2R1\" \"M2C00D2R2\" \"M2C02D2R1\" \"M2C02D2R2\" ... #>   .. ..$ X1: chr [1:600] \"9.9917004\" \"9.9753204\" \"9.9590624\" \"9.9427436\" ... #>  $ formula : chr \"outcomes ~ Hippurate + Citrate + Time + Hippurate:Citrate + Time:Hippurate + Time:Citrate + Hippurate:Citrate:Time\""},{"path":"https://manonmartin.github.io/limpca/reference/data2lmpDataList.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts data to a lmpDataList. — data2LmpDataList","title":"Converts data to a lmpDataList. — data2LmpDataList","text":"Creates lmpDataList SummarizedExperiment manually defining design, outcomes model formula. lmpDataList serves input lmpModelMatrix function start limpca modeling.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/data2lmpDataList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts data to a lmpDataList. — data2LmpDataList","text":"","code":"data2LmpDataList(   se = NULL,   assay_name = NULL,   outcomes = NULL,   design = NULL,   formula = NULL,   verbose = TRUE )"},{"path":"https://manonmartin.github.io/limpca/reference/data2lmpDataList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts data to a lmpDataList. — data2LmpDataList","text":"se SummarizedExperiment object. assay_name NULL (default), character string naming assay SummarizedExperiment object se. NULL, first assay selected. outcomes NULL (default), numerical matrix n observations m response variables. rownames needs non-NULL match design matrix. design NULL (default), data.frame experimental design n observations q explanatory variables. rownames design match rownames outcomes. formula NULL (default), character string formula used analyze data. right part formula necessary, eg: \"~ + B\", names formula match column names design verbose TRUE, prints useful information outputted list.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/data2lmpDataList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts data to a lmpDataList. — data2LmpDataList","text":"list 3 following named elements: outcomes nxm matrix m response variables. design nxq data.frame experimental design. formula character string model formula.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/data2lmpDataList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts data to a lmpDataList. — data2LmpDataList","text":"Data can included SummarizedExperiment (SE) object manually defining one multiple elements outcomes, design formula. SE provided, outcomes corresponds transposed assay SE (default first one), design corresponds colData SE formula can provided formula element S4Vectors::metadata SE (metadata(se)$formula). outputted list, outcomes structured standard statistical fashion, .e. observations rows variables (features) column. outcomes argument NULL, formatted way (see Arguments). Note priority outcomes, design formula arguments NULL (e.g. se outcomes arguments provided, resulting outcomes matrix outcomes argument). outcomes design elements mandatory. Multiple checks performed ensure data correctly formatted: rownames design outcomes match names model terms formula match column names design","code":""},{"path":[]},{"path":"https://manonmartin.github.io/limpca/reference/data2lmpDataList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts data to a lmpDataList. — data2LmpDataList","text":"","code":"data(UCH)  ### create manually the dataset  res <- data2LmpDataList(   outcomes = UCH$outcomes,   design = UCH$design[, 1, drop = FALSE], formula = \"~ Hippurate\" ) #> | dim outcomes: 34x600 #> | formula: ~ Hippurate #> | design variables (1):  #> * Hippurate (factor)  ### create the dataset from a SummarizedExperiment  library(SummarizedExperiment) #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians  se <- SummarizedExperiment(   assays = list(     counts = t(UCH$outcomes),     counts2 = t(UCH$outcomes * 2)   ), colData = UCH$design,   metadata = list(formula = \"~ Hippurate + Citrate\") )  res <- data2LmpDataList(se, assay_name = \"counts2\") #> | dim outcomes: 34x600 #> | formula: ~ Hippurate + Citrate #> | design variables (5):  #> * Hippurate (factor) #> * Citrate (factor) #> * Dilution (factor) #> * Day (factor) #> * Time (factor)  # changing the formula: res <- data2LmpDataList(se,   assay_name = \"counts2\",   formula = \"~ Hippurate + Citrate + Time\" ) #> | dim outcomes: 34x600 #> | formula: ~ Hippurate + Citrate + Time #> | design variables (5):  #> * Hippurate (factor) #> * Citrate (factor) #> * Dilution (factor) #> * Day (factor) #> * Time (factor)"},{"path":"https://manonmartin.github.io/limpca/reference/limpca.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear modeling of high-dimensional designed data based on ASCA/APCA family of methods — limpca","title":"Linear modeling of high-dimensional designed data based on ASCA/APCA family of methods — limpca","text":"package objectives provide method make Linear Models high-dimensional designed data. method handles unbalanced design. features included future (e.g. generalized linear models, random effects, ...). core functions package : data2LmpDataList Converts data lmpDataList, input argument lmpModelMatrix. lmpModelMatrix Creates model matrix \\(\\mathbf{X}\\) design matrix model formula. lmpEffectMatrices Estimates model OLS based outcomes model matrices provided outputs lmpModelMatrix function calculates estimated effect matrices \\(\\hat{\\mathbf{M}}_0, \\hat{\\mathbf{M}}_1, ...\\hat{\\mathbf{M}}_F\\) residual matrix \\(\\hat{\\mathbf{E}}\\). calculates also type III percentage variance explained effect. lmpBootstrapTests Tests significance one combination model effects using bootstrap. function based outputs lmpEffectMatrices function. lmpPcaEffects Performs PCA effect matrices outputs lmpEffectMatrices. option choose method applied: ASCA, APCA ASCA-E. Combined effects (.e. linear combinations original effect matrices) can also created decomposed PCA. functions allowing visualisation Linear Models results : lmpScreePlot Provides barplot percentage variance associated PCs effect matrices ordered importance based outputs lmpContributions. lmpContributions reports contribution effect total variance, also contribution PC total variance per effect. Moreover, contributions summarized barplot. lmpScorePlot Draws score plots effect matrix provided lmpPcaEffects function output. lmpLoading1dPlot lmpLoading2dPlot Plots loadings line plot (1D) 2D scatterplot. lmpScoreScatterPlotM Plots scores model effects simultaneously scatterplot matrix. default, first PC kept model effect. lmpEffectPlot Plots ASCA scores effect levels given model effect one PC time. graph especially appealing interpret interactions combined effects. useful functions visualise explore PCA multivariate data : plotDesign Provides graphical representation experimental design. allows visualize factor levels check design balance. plotScatter Produces plot describing relationship two columns outcomes matrix \\(\\mathbf{Y}\\). allows choose colors symbols levels design factors. Ellipses, polygons segments can added group different sets points graph. plotScatterM Produces scatter plot matrix selected columns outcomes matrix \\(\\mathbf{Y}\\) choosing specific colors symbols four factors design upper lower diagonals. plotMeans Draws, given response variable, plot response means levels three categorical factors design. design balanced, allows visualize main effects interactions response interest. unbalanced designs, plot must used caution. plotLine Generates response profile one observations .e. plots one rows outcomes matrix y-axis m response variables x-axis. Depending response type (spectra, gene expression...), point, line segment plots can used. pcaBySvd Operates principal component analysis \\(\\mathbf{Y}\\) outcome/response matrix singular value decomposition. Outputs can visulised functions pcaScorePlot, pcaLoading1dPlot, pcaLoading2dPlot pcaScreePlot. pcaScorePlot Produces score plots pcaBySvd output. pcaLoading1dPlot pcaLoading2dPlot Plots PCA loadings line plot (1D) 2D scatterplot. pcaScreePlot Returns bar plot percentage variance explained Principal Component (PC) calculated pcaBySvd.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/limpca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear modeling of high-dimensional designed data based on ASCA/APCA family of methods — limpca","text":"See package vignettes (vignette(package = \"limpca\")) detailed case studies.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/limpca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear modeling of high-dimensional designed data based on ASCA/APCA family of methods — limpca","text":"Thiel, M., Benaiche, N., Martin, M., Franceschini, S., Van Oirbeek, R., Govaerts, B. (2023). limpca: R package linear modeling high-dimensional designed data based ASCA/APCA family methods. Journal Chemometrics. e3482. https://doi.org/10.1002/cem.3482 Martin, M. (2020). Uncovering informative content metabolomics data: pre-processing 1H NMR spectra biomarkers discovery multifactorial designs.  Prom.: Govaerts, B. PhD thesis. Institut de statistique, biostatistique et sciences actuarielles, UCLouvain, Belgium. http://hdl.handle.net/2078.1/227671 Thiel M., Feraud B. Govaerts B. (2017). ASCA+ APCA+: Extensions ASCA APCA analysis unbalanced multifactorial designs. Journal Chemometrics. 31:e2895. https://doi.org/10.1002/cem.2895","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpBootstrapTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests the significance of model effects by bootstrap. — lmpBootstrapTests","title":"Tests the significance of model effects by bootstrap. — lmpBootstrapTests","text":"Tests significance effects model using bootstrap. function based outputs lmpEffectMatrices. Tests combined effects also provided.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpBootstrapTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests the significance of model effects by bootstrap. — lmpBootstrapTests","text":"","code":"lmpBootstrapTests(   resLmpEffectMatrices,   nboot = 100,   nCores = 2,   verbose = FALSE )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpBootstrapTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests the significance of model effects by bootstrap. — lmpBootstrapTests","text":"resLmpEffectMatrices list 12 lmpEffectMatrices. nboot integer number bootstrap sample drawn. nCores number cores use parallel execution. verbose TRUE, display message duration execution.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpBootstrapTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests the significance of model effects by bootstrap. — lmpBootstrapTests","text":"list following elements: f.obs vector size F (number effects model) F statistics model term calculated initial data. f.boot b × F matrix F statistics calculated bootstrap samples. p.values vector size F p-value model effect. resultsTable 2 × F matrix p-value percentage variance model effect.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpBootstrapTests.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tests the significance of model effects by bootstrap. — lmpBootstrapTests","text":"Thiel M.,Feraud B. Govaerts B. (2017) ASCA+ APCA+: Extensions ASCA APCA analysis unbalanced multifactorial designs, Journal Chemometrics Thiel, M., Benaiche, N., Martin, M., Franceschini, S., Van Oirbeek, R., & Govaerts, B. (2023) limpca: R package linear modeling high dimensional designed data based ASCA/APCA family methods, Journal Chemometrics","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpBootstrapTests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests the significance of model effects by bootstrap. — lmpBootstrapTests","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix = resLmpModelMatrix)  res <- lmpBootstrapTests(   resLmpEffectMatrices = resLmpEffectMatrices,   nboot = 10, nCores = 2, verbose = TRUE ) #> 8.15016579627991"},{"path":"https://manonmartin.github.io/limpca/reference/lmpContributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of the contributions of each effect — lmpContributions","title":"Summary of the contributions of each effect — lmpContributions","text":"Reports contribution effect total variance, also contribution PC total variance per effect. contributions also summarized barplot.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpContributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of the contributions of each effect — lmpContributions","text":"","code":"lmpContributions(resLmpPcaEffects, nPC = 5)"},{"path":"https://manonmartin.github.io/limpca/reference/lmpContributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of the contributions of each effect — lmpContributions","text":"resLmpPcaEffects list corresponding output value lmpPcaEffects. nPC number Principal Components display.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpContributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of the contributions of each effect — lmpContributions","text":"list : totalContribTable Table percentage contribution effect total variance. effectTable Table percentage variance explained principal component model effect decomposition. contribTable Table percentage variance explained principal component effect reported percentage contribution given effect total variance. combinedEffectTable Equivalent EffectTable combined effects. plotTotal Plot ordered contributions TotalContribTable. plotContrib Plot ordered contributions ContribTable.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpContributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of the contributions of each effect — lmpContributions","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resLmpPcaEffects <- lmpPcaEffects(resLmpEffectMatrices, method = \"ASCA-E\")  lmpContributions(resLmpPcaEffects) #> $totalContribTable #>                        Percentage of Variance #> Hippurate                               39.31 #> Citrate                                 29.91 #> Time                                    16.24 #> Hippurate:Citrate                        1.54 #> Hippurate:Time                           6.23 #> Citrate:Time                             0.54 #> Hippurate:Citrate:Time                   1.68 #> Residuals                                4.30 #>  #> $effectTable #>                           PC1   PC2   PC3  PC4  PC5    Sum #> Hippurate               97.71  2.29  0.00 0.00 0.00 100.00 #> Citrate                 98.22  1.78  0.00 0.00 0.00 100.00 #> Time                   100.00  0.00  0.00 0.00 0.00 100.00 #> Hippurate:Citrate       44.01 38.51 15.13 2.34 0.00  99.99 #> Hippurate:Time          93.92  6.08  0.00 0.00 0.00 100.00 #> Citrate:Time            90.76  9.24  0.00 0.00 0.00 100.00 #> Hippurate:Citrate:Time  47.23 27.49 22.60 2.68 0.00 100.00 #> Residuals               48.54 16.90 10.28 5.93 4.32  85.97 #>  #> $contribTable #>                          PC1  PC2  PC3  PC4  PC5 Contrib #> Hippurate              38.41 0.90 0.00 0.00 0.00   39.31 #> Citrate                29.37 0.53 0.00 0.00 0.00   29.91 #> Time                   16.24 0.00 0.00 0.00 0.00   16.24 #> Hippurate:Citrate       0.68 0.59 0.23 0.04 0.00    1.54 #> Hippurate:Time          5.85 0.38 0.00 0.00 0.00    6.23 #> Citrate:Time            0.49 0.05 0.00 0.00 0.00    0.54 #> Hippurate:Citrate:Time  0.80 0.46 0.38 0.05 0.00    1.68 #> Residuals               2.09 0.73 0.44 0.25 0.19    4.30 #>  #> $combinedEffectTable #>             PC1  PC2   PC3  PC4  PC5   Sum #> Residuals 48.54 16.9 10.28 5.93 4.32 85.97 #>  #> $plotTotal  #>  #> $plotContrib  #>"},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the effect matrices — lmpEffectMatrices","title":"Computes the effect matrices — lmpEffectMatrices","text":"Estimates model OLS based outcomes model matrices provided outputs lmpModelMatrix function calculates estimated effect matrices \\(\\hat{\\mathbf{M}}_0, \\hat{\\mathbf{M}}_1, ...\\hat{\\mathbf{M}}_F\\), ...  residual matrix \\(\\hat{\\mathbf{E}}\\). calculates also type III percentage variance explained effect.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the effect matrices — lmpEffectMatrices","text":"","code":"lmpEffectMatrices(resLmpModelMatrix, SS = TRUE, contrastList = NA)"},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the effect matrices — lmpEffectMatrices","text":"resLmpModelMatrix list 5 elements lmpModelMatrix. SS Logical. FALSE, compute percentage variance effect. contrastList list contrasts parameter. NA, function creates automatically list default.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the effect matrices — lmpEffectMatrices","text":"list following elements: lmpDataList initial object: list outcomes, design formula. modelMatrix nxp model matrix specifically encoded ASCA-GLM method. modelMatrixByEffect list F+1 model matrices effect. effectsNamesUnique character vector F+1 names model effects, repeated . effectsNamesAll character vector p names model effects ordered repeated column names model matrix. effectMatrices list F+1 effect matrices model effect. predictedvalues nxm matrix predicted outcome values. residuals nxm matrix model residuals. parameters pxm matrix estimated parameters. type3SS vector type III sum squares model effect (SS = TRUE). variationPercentages vector percentage variance model effect (SS = TRUE). varPercentagesPlot ggplot bar plot contributions model effect total variance (SS = TRUE).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectMatrices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes the effect matrices — lmpEffectMatrices","text":"Thiel M.,Feraud B. Govaerts B. (2017) ASCA+ APCA+: Extensions ASCA APCA analysis unbalanced multifactorial designs, Journal Chemometrics","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the effect matrices — lmpEffectMatrices","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) reslmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) reslmpEffectMatrices$varPercentagesPlot"},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect plot — lmpEffectPlot","title":"Effect plot — lmpEffectPlot","text":"Plots ASCA scores effect levels given model effect one PC time. graph especially appealing interpret interactions combined effects. wrapper plotMeans.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect plot — lmpEffectPlot","text":"","code":"lmpEffectPlot(   resASCA,   effectName,   axes = 1,   x,   z = NULL,   w = NULL,   hline = 0,   ... )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effect plot — lmpEffectPlot","text":"resASCA list corresponding ASCA output value lmpPcaEffects. effectName Name effect used plot scores. axes numerical vector Principal Components axes drawn. x character string giving design factor whose levels form x axis. z character string giving design factor whose levels form traces. w character string giving design factor whose levels used facet. hline NULL, draws one several horizontal line(s) values given hline. ... Additional arguments passed plotMeans.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effect plot — lmpEffectPlot","text":"effect plot (ggplot).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Effect plot — lmpEffectPlot","text":"lmpEffectPlot wrapper plotMeans.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpEffectPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effect plot — lmpEffectPlot","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resASCA <- lmpPcaEffects(   resLmpEffectMatrices = resLmpEffectMatrices,   method = \"ASCA\", combineEffects = list(c(\"Hippurate\", \"Time\", \"Hippurate:Time\")) )  # Effect plot for an interaction effect lmpEffectPlot(resASCA, effectName = \"Hippurate:Time\", x = \"Hippurate\", z = \"Time\")  # Effect plot for a combined effect lmpEffectPlot(resASCA, effectName = \"Hippurate+Time+Hippurate:Time\", x = \"Hippurate\", z = \"Time\")"},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading1dPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Loadings represented on a line plot. — lmpLoading1dPlot","title":"Loadings represented on a line plot. — lmpLoading1dPlot","text":"Plots loading vectors effect matrix lmpPcaEffects outputs line plots. wrapper plotLine.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading1dPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loadings represented on a line plot. — lmpLoading1dPlot","text":"","code":"lmpLoading1dPlot(resLmpPcaEffects, effectNames = NULL, axes = c(1, 2), ...)"},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading1dPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loadings represented on a line plot. — lmpLoading1dPlot","text":"resLmpPcaEffects list corresponding output value lmpPcaEffects. effectNames Names effects plotted. NULL, effects plotted. axes numerical vector Principal Components axes drawn. ... Additional arguments passed plotLine xaxis_type, type ang_x_axis.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading1dPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loadings represented on a line plot. — lmpLoading1dPlot","text":"list ggplot objects representing loading plots.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading1dPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loadings represented on a line plot. — lmpLoading1dPlot","text":"lmpLoading1dPlot wrapper plotLine. See ?plotLine information additional arguments.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading1dPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loadings represented on a line plot. — lmpLoading1dPlot","text":"","code":"# Example of \"spectral\" type loadings (line and numerical x-axis) data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resASCA <- lmpPcaEffects(resLmpEffectMatrices,   combineEffects = list(c(\"Time\", \"Hippurate:Time\")) ) lmpLoading1dPlot(resASCA) #> $Hippurate  #>  #> $Citrate  #>  #> $Time  #>  #> $`Hippurate:Citrate`  #>  #> $`Hippurate:Time`  #>  #> $`Citrate:Time`  #>  #> $`Hippurate:Citrate:Time`  #>  #> $`Time+Hippurate:Time`  #>  #> $Residuals  #>  lmpLoading1dPlot(resASCA, effectNames = c(\"Hippurate\", \"Citrate\")) #> $Hippurate  #>  #> $Citrate  #>   # Example of \"segment\" and discrete type loadings (segments and character x-axis) data(\"trout\") resLmpModelMatrix <- lmpModelMatrix(trout) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resASCA <- lmpPcaEffects(resLmpEffectMatrices) lmpLoading1dPlot(resASCA,   effectNames = \"Day\",   xaxis_type = \"character\", type = \"s\", ang_x_axis = 90 )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading2dPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading plots on a 2D scatter plot — lmpLoading2dPlot","title":"Loading plots on a 2D scatter plot — lmpLoading2dPlot","text":"Draws 2D loading plot effect matrix provided lmpPcaEffects outputs. wrapper plotScatter function, allows visualization effect loading matrices two components time options available plotScatter.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading2dPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading plots on a 2D scatter plot — lmpLoading2dPlot","text":"","code":"lmpLoading2dPlot(   resLmpPcaEffects,   effectNames = NULL,   axes = c(1, 2),   addRownames = FALSE,   pl_n = 10,   metadata = NULL,   drawOrigin = TRUE,   ... )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading2dPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading plots on a 2D scatter plot — lmpLoading2dPlot","text":"resLmpPcaEffects list corresponding output value lmpPcaEffects. effectNames Names effects plotted. NULL, effects plotted. axes numerical vector 2 Principal Components axes drawn. addRownames Boolean indicating labels plotted. default, uses column names outcome matrix can manually specified points_labs argument plotScatter. pl_n number labels plotted, based distance measure \\(d\\) (see Details). metadata nxk \"free encoded\" data.frame corresponding design plotScatter. drawOrigin TRUE, draws horizontal vertical intercepts (0,0) based plotScatter function. ... Additional arguments passed plotScatter.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading2dPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading plots on a 2D scatter plot — lmpLoading2dPlot","text":"list loading plots (ggplot).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading2dPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loading plots on a 2D scatter plot — lmpLoading2dPlot","text":"lmpLoading2dPlot wrapper plotScatter. See ?plotScatter information additional arguments. distance measure \\(d\\) used rank variables based following formula: $$d = \\sqrt(P_{ab}^2*\\lambda_{ab}^2)$$ \\(\\) \\(b\\) two selected Principal Components, \\(P_{ab}\\) represents loadings \\(\\lambda_{ab}\\) singular values.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpLoading2dPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading plots on a 2D scatter plot — lmpLoading2dPlot","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resASCA <- lmpPcaEffects(resLmpEffectMatrices)  lmpLoading2dPlot(resASCA, effectNames = \"Hippurate\")   # adding color, shape and labels to points id_hip <- c(seq(126, 156), seq(362, 375)) peaks <- rep(\"other\", ncol(UCH$outcomes)) peaks[id_hip] <- \"hip\" metadata <- data.frame(peaks)  lmpLoading2dPlot(resASCA,   effectNames = \"Hippurate\",   metadata = metadata, addRownames = TRUE, color = \"peaks\",   shape = \"peaks\" ) #> Warning: at least one variable used as color or shape is not a factor and will be converted as such   # changing max.overlaps of ggrepel options(ggrepel.max.overlaps = 30) lmpLoading2dPlot(resASCA,   effectNames = \"Hippurate\",   metadata = metadata, addRownames = TRUE, color = \"peaks\",   shape = \"peaks\", pl_n = 20 ) #> Warning: at least one variable used as color or shape is not a factor and will be converted as such #> Warning: ggrepel: 4 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://manonmartin.github.io/limpca/reference/lmpModelMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the model matrix X — lmpModelMatrix","title":"Creates the model matrix X — lmpModelMatrix","text":"Creates model matrix X design matrix model formula.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpModelMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the model matrix X — lmpModelMatrix","text":"","code":"lmpModelMatrix(lmpDataList)"},{"path":"https://manonmartin.github.io/limpca/reference/lmpModelMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates the model matrix X — lmpModelMatrix","text":"lmpDataList list containing outcomes, experimental design formula.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpModelMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates the model matrix X — lmpModelMatrix","text":"list 5 following named elements : lmpDataList initial object: list outcomes, design formula, outputted data2LmpDataList. modelMatrix nxK model matrix specifically encoded ASCA-GLM method. modelMatrixByEffect list p model matrices model effect. effectsNamesUnique character vector p names model effects, repeated . effectsNamesAll character vector K names model effects ordered repeated column names model matrix.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpModelMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates the model matrix X — lmpModelMatrix","text":"typical ASCA-GLM (ASCA+) analysis, effects GLM model must first used transform design matrix model matrix design factors encoded usign sum coding commonly used industrial experimental design. Suppose design matrix nxk n observations k factors. transformation, model matrix size nxp. fator levels, sum coding creates -1 columns model matrix 0 1 -1 first levels -1 last one. p total number parameter response (outcome) ASCA model. information available article (Thiel et al, 2017) Note moment, factors can used explanatory variables.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpModelMatrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creates the model matrix X — lmpModelMatrix","text":"Thiel M.,Feraud B. Govaerts B. (2017) ASCA+ APCA+: Extensions ASCA APCA analysis unbalanced multifactorial designs, Journal Chemometrics","code":""},{"path":[]},{"path":"https://manonmartin.github.io/limpca/reference/lmpModelMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates the model matrix X — lmpModelMatrix","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH)  head(resLmpModelMatrix$modelMatrix) #>           (Intercept) Hippurate1 Hippurate2 Citrate1 Citrate2 Time1 #> M2C00D2R1           1          1          0        1        0     1 #> M2C00D2R2           1          1          0        1        0    -1 #> M2C02D2R1           1          1          0        0        1     1 #> M2C02D2R2           1          1          0        0        1    -1 #> M2C04D2R1           1          1          0       -1       -1     1 #> M2C04D2R2           1          1          0       -1       -1    -1 #>           Hippurate1:Citrate1 Hippurate2:Citrate1 Hippurate1:Citrate2 #> M2C00D2R1                   1                   0                   0 #> M2C00D2R2                   1                   0                   0 #> M2C02D2R1                   0                   0                   1 #> M2C02D2R2                   0                   0                   1 #> M2C04D2R1                  -1                   0                  -1 #> M2C04D2R2                  -1                   0                  -1 #>           Hippurate2:Citrate2 Hippurate1:Time1 Hippurate2:Time1 Citrate1:Time1 #> M2C00D2R1                   0                1                0              1 #> M2C00D2R2                   0               -1                0             -1 #> M2C02D2R1                   0                1                0              0 #> M2C02D2R2                   0               -1                0              0 #> M2C04D2R1                   0                1                0             -1 #> M2C04D2R2                   0               -1                0              1 #>           Citrate2:Time1 Hippurate1:Citrate1:Time1 Hippurate2:Citrate1:Time1 #> M2C00D2R1              0                         1                         0 #> M2C00D2R2              0                        -1                         0 #> M2C02D2R1              1                         0                         0 #> M2C02D2R2             -1                         0                         0 #> M2C04D2R1             -1                        -1                         0 #> M2C04D2R2              1                         1                         0 #>           Hippurate1:Citrate2:Time1 Hippurate2:Citrate2:Time1 #> M2C00D2R1                         0                         0 #> M2C00D2R2                         0                         0 #> M2C02D2R1                         1                         0 #> M2C02D2R2                        -1                         0 #> M2C04D2R1                        -1                         0 #> M2C04D2R2                         1                         0"},{"path":"https://manonmartin.github.io/limpca/reference/lmpPcaEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA on the effect matrices — lmpPcaEffects","title":"PCA on the effect matrices — lmpPcaEffects","text":"Performs PCA effect matrices outputs lmpEffectMatrices. option choose method applied: ASCA, APCA ASCA-E. Combined effects (.e. linear combinations original effect matrices) can also created decomposed PCA.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpPcaEffects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA on the effect matrices — lmpPcaEffects","text":"","code":"lmpPcaEffects(   resLmpEffectMatrices,   method = c(\"ASCA\", \"APCA\", \"ASCA-E\"),   combineEffects = NULL,   verbose = FALSE )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpPcaEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA on the effect matrices — lmpPcaEffects","text":"resLmpEffectMatrices resLmpEffectMatrices list resulting lmpEffectMatrices. method method used compute PCA. One c(\"ASCA\",\"APCA\",\"ASCA-E\"). combineEffects NULL, list vectors containing names effects combined. verbose TRUE, display message duration execution.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpPcaEffects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA on the effect matrices — lmpPcaEffects","text":"list first,PCA results pcaBySvd effect matrix. results contain : scores Scores PCA principal component. loadings Loadings PCA principal component. eigval Eigenvalues principal component. singvar Singular values principal component. var Explained variances principal component. cumvar Cumulated explained variances principal component. original.dataset Original dataset. also others outputs : lmpDataList initial object: list outcomes, design formula. effectsNamesUnique character vector F+1 names model terms, repeated . method dimension reduction method used: c(\"ASCA\",\"APCA\",\"ASCA-E\"). type3SS vector type III SS model term. variationPercentages vector percentage variance explained model term.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpPcaEffects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PCA on the effect matrices — lmpPcaEffects","text":"function allows 3 different methods : ASCA PCA applied directly pure effect matrix \\(\\hat{\\mathbf{M}}_f, f=1...F\\). ASCA-E PCA applied pure effect matrix augmented effect matrix projected space ASCA components. APCA PCA applied augmented effect matrix : \\(\\hat{\\mathbf{M}}_f+\\hat{\\mathbf{E}}\\).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpPcaEffects.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PCA on the effect matrices — lmpPcaEffects","text":"Thiel M.,Feraud B. Govaerts B. (2017) ASCA+ APCA+: Extensions ASCA APCA analysis unbalanced multifactorial designs. Journal Chemometrics. 31:e2895. https://doi.org/10.1002/cem.2895","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpPcaEffects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA on the effect matrices — lmpPcaEffects","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resLmpPcaEffects <- lmpPcaEffects(resLmpEffectMatrices, method = \"ASCA-E\")"},{"path":"https://manonmartin.github.io/limpca/reference/lmpScorePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Score plots of effect matrices — lmpScorePlot","title":"Score plots of effect matrices — lmpScorePlot","text":"Draws score plots (augmented) effect matrix provided lmpPcaEffects. wrapper plotScatter function, allows visualize scores effect matrices two components time available options  plotScatter.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScorePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score plots of effect matrices — lmpScorePlot","text":"","code":"lmpScorePlot(resLmpPcaEffects, effectNames = NULL, axes = c(1, 2), ...)"},{"path":"https://manonmartin.github.io/limpca/reference/lmpScorePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score plots of effect matrices — lmpScorePlot","text":"resLmpPcaEffects list corresponding output value lmpPcaEffects. effectNames Names effects plotted. NULL, effects plotted. axes numerical vector 2 Principal Components axes drawn. ... Additional arguments passed plotScatter.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScorePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score plots of effect matrices — lmpScorePlot","text":"list score plots (ggplot).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScorePlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score plots of effect matrices — lmpScorePlot","text":"lmpScorePlot wrapper plotScatter.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScorePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score plots of effect matrices — lmpScorePlot","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix)  # PCA decomposition of effect matrices (ASCA) resASCA <- lmpPcaEffects(resLmpEffectMatrices) # Score plot of Hippurate effect matrix lmpScorePlot(resASCA,   effectNames = \"Hippurate\",   color = \"Hippurate\", shape = \"Hippurate\" )   # PCA decomposition of augmented effect matrices (APCA) resASCA <- lmpPcaEffects(resLmpEffectMatrices, method = \"APCA\") # Score plot of Hippurate augmented effect matrix lmpScorePlot(resASCA,   effectNames = \"Hippurate\",   color = \"Hippurate\", shape = \"Hippurate\", drawShapes = \"ellipse\" )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpScoreScatterPlotM.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot matrix of effect matrices scores — lmpScoreScatterPlotM","title":"Scatterplot matrix of effect matrices scores — lmpScoreScatterPlotM","text":"Plots scores model effects simultaneously scatterplot matrix. default, first PC kept model effect , wrapper plotScatterM, choice symbols colors distinguish factor levels allows enriched visualization factors’ effect responses.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScoreScatterPlotM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot matrix of effect matrices scores — lmpScoreScatterPlotM","text":"","code":"lmpScoreScatterPlotM(   resLmpPcaEffects,   effectNames = NULL,   PCdim = NULL,   modelAbbrev = FALSE,   ... )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpScoreScatterPlotM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot matrix of effect matrices scores — lmpScoreScatterPlotM","text":"resLmpPcaEffects list corresponding output value lmpPcaEffects. effectNames character vector name effects plot. PCdim numeric vector length effectNames indicating number component plot. modelAbbrev logical whether abbreviate interaction terms . ... Additional arguments passed plotScatterM.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScoreScatterPlotM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatterplot matrix of effect matrices scores — lmpScoreScatterPlotM","text":"matrix graphs","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScoreScatterPlotM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatterplot matrix of effect matrices scores — lmpScoreScatterPlotM","text":"lmpScoreScatterPlotM wrapper plotScatterM.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScoreScatterPlotM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot matrix of effect matrices scores — lmpScoreScatterPlotM","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) ResLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resLmpPcaEffects <- lmpPcaEffects(ResLmpEffectMatrices, method = \"ASCA-E\")  lmpScoreScatterPlotM(resLmpPcaEffects,   varname.colorup = \"Citrate\",   varname.pchup = \"Hippurate\",   varname.pchdown = \"Day\",   varname.colordown = \"Time\" )   # advanced setting lmpScoreScatterPlotM(resLmpPcaEffects,   modelAbbrev = FALSE,   effectNames = c(\"Citrate\", \"Hippurate\", \"Hippurate:Citrate\"),   PCdim = c(2, 2, 2),   varname.colorup = \"Citrate\",   vec.colorup = c(\"red\", \"blue\", \"green\"),   varname.pchup = \"Hippurate\",   vec.pchup = c(1, 2, 3),   varname.pchdown = \"Day\",   vec.pchdown = c(4, 5),   varname.colordown = \"Time\",   vec.colordown = c(\"brown\", \"grey\") )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpScreePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scree Plot — lmpScreePlot","title":"Scree Plot — lmpScreePlot","text":"Provides barplot percentage variance associated PCs effect matrices ordered importance based outputs lmpContributions.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScreePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scree Plot — lmpScreePlot","text":"","code":"lmpScreePlot(   resLmpContributions,   effectNames = NULL,   nPC = 5,   theme = theme_bw() )"},{"path":"https://manonmartin.github.io/limpca/reference/lmpScreePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scree Plot — lmpScreePlot","text":"resLmpContributions resLmpContributions list function lmpContributions. effectNames Names effects plotted. NULL, effects plotted. nPC integer number components plot. theme ggplot theme","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScreePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scree Plot — lmpScreePlot","text":"scree plot (ggplot).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/lmpScreePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scree Plot — lmpScreePlot","text":"","code":"data(\"UCH\") resLmpModelMatrix <- lmpModelMatrix(UCH) resLmpEffectMatrices <- lmpEffectMatrices(resLmpModelMatrix) resASCAE <- lmpPcaEffects(resLmpEffectMatrices, method = \"ASCA-E\") resLmpContributions <- lmpContributions(resASCAE) lmpScreePlot(resLmpContributions, effectNames = \"Hippurate:Citrate\", nPC = 4) #> $`Hippurate:Citrate`  #>"},{"path":"https://manonmartin.github.io/limpca/reference/pcaBySvd.html","id":null,"dir":"Reference","previous_headings":"","what":"Singular Value Decomposition for PCA analysis — pcaBySvd","title":"Singular Value Decomposition for PCA analysis — pcaBySvd","text":"Operates Principal Component Analysis Y outcome/response matrix singular Value Decomposition (pre-processing involves mean-centering Y). Outputs represented functions pcaScorePlot, pcaLoading1dPlot, pcaLoading2dPlot pcaScreePlot.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaBySvd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Singular Value Decomposition for PCA analysis — pcaBySvd","text":"","code":"pcaBySvd(Y = NULL, lmpDataList = NULL, nPC = min(dim(Y)))"},{"path":"https://manonmartin.github.io/limpca/reference/pcaBySvd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Singular Value Decomposition for PCA analysis — pcaBySvd","text":"Y \\(n \\times m\\) matrix \\(n\\) observations \\(m\\) (response) variables. lmpDataList list outcomes, design formula, outputted data2LmpDataList. nPC Number Principal Components extract.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaBySvd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Singular Value Decomposition for PCA analysis — pcaBySvd","text":"list containing following elements: scores Scores loadings Loadings eigval Eigenvalues singvar Singular values var Explained variances cumvar Cumulated explained variances original.dataset Original dataset design Design study","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaBySvd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Singular Value Decomposition for PCA analysis — pcaBySvd","text":"","code":"data(\"UCH\")  PCA.res1 <- pcaBySvd(Y = UCH$outcomes)  PCA.res2 <- pcaBySvd(lmpDataList = UCH)  identical(PCA.res1, PCA.res2) #> [1] FALSE"},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading1dPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Loadings represented on a line plot. — pcaLoading1dPlot","title":"Loadings represented on a line plot. — pcaLoading1dPlot","text":"Plots loading vectors pcaBySvd output different available line types.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading1dPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loadings represented on a line plot. — pcaLoading1dPlot","text":"","code":"pcaLoading1dPlot(resPcaBySvd, axes = c(1, 2), title = \"PCA loading plot\", ...)"},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading1dPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loadings represented on a line plot. — pcaLoading1dPlot","text":"resPcaBySvd list corresponding output value pcaBySvd. axes numerical vector length 2 Principal Components axes drawn. title Plot title. ... Additional arguments passed plotLine.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading1dPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loadings represented on a line plot. — pcaLoading1dPlot","text":"ggplot2 object PCA loading plot.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading1dPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loadings represented on a line plot. — pcaLoading1dPlot","text":"pcaLoading1dPlot wrapper plotLine. See ?plotLine information additional arguments.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading1dPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loadings represented on a line plot. — pcaLoading1dPlot","text":"","code":"data(\"UCH\") ResPCA <- pcaBySvd(UCH$outcomes)  pcaLoading1dPlot(   resPcaBySvd = ResPCA, axes = c(1, 2),   title = \"PCA loading plot UCH\", xlab = \"ppm\", ylab = \"Values\" )"},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading2dPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading plots on a 2D scatter plot — pcaLoading2dPlot","title":"Loading plots on a 2D scatter plot — pcaLoading2dPlot","text":"Produces 2D loading plots pcaBySvd graphical options plotScatter wrapper function.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading2dPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading plots on a 2D scatter plot — pcaLoading2dPlot","text":"","code":"pcaLoading2dPlot(   resPcaBySvd,   axes = c(1, 2),   title = \"PCA loading plot\",   addRownames = FALSE,   pl_n = 10,   metadata = NULL,   drawOrigin = TRUE,   ... )"},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading2dPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading plots on a 2D scatter plot — pcaLoading2dPlot","text":"resPcaBySvd list corresponding output value pcaBySvd. axes numerical vector length 2 Principal Components axes drawn. title Plot title. addRownames Boolean indicating labels plotted. default, uses row names loadings matrix can manually specified points_labs argument plotScatter. pl_n number labels plotted, based distance measure (see Details). metadata \\(n \\times k\\) \"freely encoded\" data.frame corresponding design argument plotScatter. drawOrigin TRUE, draws horizontal vertical intercepts (0,0) based plotScatter function. ... Additional arguments passed plotScatter.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading2dPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading plots on a 2D scatter plot — pcaLoading2dPlot","text":"ggplot2 object PCA loading plot.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading2dPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loading plots on a 2D scatter plot — pcaLoading2dPlot","text":"pcaLoading2dPlot wrapper plotScatter. See ?plotScatter information additional arguments. distance measure \\(d\\) used rank variables based following formula: $$d = \\sqrt(P_{ab}^2*\\lambda_{ab}^2)$$ \\(\\) \\(b\\) two selected Principal Components, \\(P_{ab}\\) represents loadings \\(\\lambda_{ab}\\) singular values.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaLoading2dPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading plots on a 2D scatter plot — pcaLoading2dPlot","text":"","code":"data(\"UCH\") ResPCA <- pcaBySvd(UCH$outcomes)  pcaLoading2dPlot(   resPcaBySvd = ResPCA, axes = c(1, 2),   title = \"PCA loading plot UCH\" )   # adding color,  shape and labels to points id_cit <- seq(446, 459) id_hip <- c(seq(126, 156), seq(362, 375)) peaks <- rep(\"other\", ncol(UCH$outcomes)) peaks[id_hip] <- \"hip\" peaks[id_cit] <- \"cit\" metadata <- data.frame(peaks)  pcaLoading2dPlot(   resPcaBySvd = ResPCA, axes = c(1, 2),   title = \"PCA loading plot UCH\", metadata = metadata,   color = \"peaks\", shape = \"peaks\", addRownames = TRUE ) #> Warning: at least one variable used as color or shape is not a factor and will be converted as such   # changing max.overlaps of ggrepel options(ggrepel.max.overlaps = 30) pcaLoading2dPlot(   resPcaBySvd = ResPCA, axes = c(1, 2),   title = \"PCA loading plot UCH\", metadata = metadata,   color = \"peaks\", shape = \"peaks\", addRownames = TRUE,   pl_n = 35 ) #> Warning: at least one variable used as color or shape is not a factor and will be converted as such"},{"path":"https://manonmartin.github.io/limpca/reference/pcaScorePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Score plots — pcaScorePlot","title":"Score plots — pcaScorePlot","text":"Produces score plots pcaBySvd output graphical options plotScatter wrapper function..","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaScorePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score plots — pcaScorePlot","text":"","code":"pcaScorePlot(   resPcaBySvd,   design = NULL,   axes = c(1, 2),   title = \"PCA score plot\",   points_labs_rn = FALSE,   ... )"},{"path":"https://manonmartin.github.io/limpca/reference/pcaScorePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score plots — pcaScorePlot","text":"resPcaBySvd list corresponding output value pcaBySvd. design \\(n \\times k\\) \"freely encoded\" experimental design data.frame. axes numerical vector length 2 Principal Components axes drawn. title Plot title. points_labs_rn Boolean indicating rownames scores matrix plotted. ... Additional arguments passed plotScatter.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaScorePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score plots — pcaScorePlot","text":"ggplot2 PCA score plot.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaScorePlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score plots — pcaScorePlot","text":"pcaScorePlot wrapper plotScatter. See ?plotScatter information additional arguments.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaScorePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score plots — pcaScorePlot","text":"","code":"data(\"UCH\")  # design is explicitly defined ResPCA <- pcaBySvd(Y = UCH$outcomes)  pcaScorePlot(   resPcaBySvd = ResPCA, axes = c(1, 2),   title = \"PCA score plot UCH\", design = UCH$design,   color = \"Hippurate\", shape = \"Citrate\" )   # design is recovered from lmpDataList through pcaBySvd() ResPCA <- pcaBySvd(lmpDataList = UCH)  pcaScorePlot(   resPcaBySvd = ResPCA, axes = c(1, 2),   title = \"PCA score plot UCH\",   color = \"Hippurate\", shape = \"Citrate\" )"},{"path":"https://manonmartin.github.io/limpca/reference/pcaScreePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scree Plot — pcaScreePlot","title":"Scree Plot — pcaScreePlot","text":"Returns bar plot percentage variance explained Principal Component calculated pcaBySvd.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaScreePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scree Plot — pcaScreePlot","text":"","code":"pcaScreePlot(   resPcaBySvd,   nPC = 5,   title = \"PCA scree plot\",   theme = theme_bw() )"},{"path":"https://manonmartin.github.io/limpca/reference/pcaScreePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scree Plot — pcaScreePlot","text":"resPcaBySvd list corresponding output value pcaBySvd. nPC integer number Principal Components plot. title Plot title. theme ggplot2 theme, see ?ggtheme info.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaScreePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scree Plot — pcaScreePlot","text":"ggplot2 PCA scree plot","code":""},{"path":"https://manonmartin.github.io/limpca/reference/pcaScreePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scree Plot — pcaScreePlot","text":"","code":"data(\"UCH\") resPCA <- pcaBySvd(UCH$outcomes) pcaScreePlot(resPCA, nPC = 4)"},{"path":"https://manonmartin.github.io/limpca/reference/plotDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of the design matrix — plotDesign","title":"Plot of the design matrix — plotDesign","text":"Provides graphical representation experimental design. allows visualize factors levels check design balance.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of the design matrix — plotDesign","text":"","code":"plotDesign(   design = NULL,   lmpDataList = NULL,   x = NULL,   y = NULL,   rows = NULL,   cols = NULL,   title = \"Plot of the design\",   theme = theme_bw() )"},{"path":"https://manonmartin.github.io/limpca/reference/plotDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of the design matrix — plotDesign","text":"design data.frame representing \\(n \\times k\\) \"freely encoded\" experimental design. Can NULL lmpDataList defined. lmpDataList NULL, list outcomes, design formula, outputted data2LmpDataList. x default, first column design ; otherwise NULL, character string giving column name design used x-axis. column needs factor. y default, second column design present ; otherwise NULL, character string giving column name design used y-axis. rows default, fourth column design present ; otherwise NULL, character vector one several column name(s) design used faceting along rows. column needs factor. cols default, third column design present ; otherwise NULL, character vector one several column name(s) design used faceting along columns. column needs factor. title Plot title. theme ggplot2 theme, see ?ggtheme info.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of the design matrix — plotDesign","text":"ggplot2 plot design matrix.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of the design matrix — plotDesign","text":"Either design lmpDataList need defined. given, priority goes design. default behavior (parameters x, y, cols rows NULL) uses first four columns df. least one arguments NULL, function use non NULL parameters displayed.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of the design matrix — plotDesign","text":"","code":"### trout data data(trout)  plotDesign(design = trout$design, x = \"Day\", y = \"Treatment\")   # equivalent to: plotDesign(lmpDataList = trout, x = \"Day\", y = \"Treatment\")   ### mtcars data(mtcars) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ lubridate::%within%() masks IRanges::%within%() #> ✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position() #> ✖ dplyr::collapse()     masks IRanges::collapse() #> ✖ dplyr::combine()      masks Biobase::combine(), BiocGenerics::combine() #> ✖ dplyr::count()        masks matrixStats::count() #> ✖ dplyr::desc()         masks IRanges::desc() #> ✖ tidyr::expand()       masks S4Vectors::expand() #> ✖ dplyr::filter()       masks stats::filter() #> ✖ dplyr::first()        masks S4Vectors::first() #> ✖ dplyr::lag()          masks stats::lag() #> ✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce() #> ✖ dplyr::rename()       masks S4Vectors::rename() #> ✖ lubridate::second()   masks S4Vectors::second() #> ✖ lubridate::second<-() masks S4Vectors::second<-() #> ✖ dplyr::slice()        masks IRanges::slice() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors df <- mtcars %>%   dplyr::select(cyl, vs, am, gear, carb) %>%   as.data.frame() %>%   dplyr::mutate(across(everything(), as.factor))  # Default behavior: display the 4 first factors in the design plotDesign(design = df)   # 2 factors plotDesign(   design = df, x = \"cyl\", y = \"vs\",   cols = NULL, rows = NULL )  # 3 factors plotDesign(   design = df, x = \"cyl\", y = \"vs\",   cols = NULL, rows = c(\"am\") )  # 4 factors plotDesign(   design = df, x = \"cyl\", y = \"vs\",   cols = c(\"gear\"), rows = c(\"am\") )  # 5 factors plotDesign(   design = df, x = \"cyl\", y = \"vs\",   cols = c(\"gear\"), rows = c(\"am\", \"carb\") )   plotDesign(   design = df, x = \"cyl\", y = \"vs\",   cols = c(\"vs\"), rows = c(\"am\", \"carb\") )   ### UCH data(\"UCH\") plotDesign(design = UCH$design, x = \"Hippurate\", y = \"Citrate\", rows = \"Day\")"},{"path":"https://manonmartin.github.io/limpca/reference/plotLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot — plotLine","title":"Line plot — plotLine","text":"Generates response profile one observations .e. plots one rows outcomes matrix y-axis \\(m\\) response variables x-axis. Depending response type (spectra, gene expression...), point, line segment plots can used.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot — plotLine","text":"","code":"plotLine(   Y = NULL,   lmpDataList = NULL,   rows = 1,   type = c(\"l\", \"p\", \"s\"),   title = \"Line plot\",   xlab = NULL,   ylab = NULL,   xaxis_type = c(\"numeric\", \"character\"),   stacked = FALSE,   ncol = 1,   nrow = NULL,   facet_label = NULL,   hline = 0,   size = 0.5,   color = NULL,   shape = 1,   theme = theme_bw(),   ang_x_axis = NULL )"},{"path":"https://manonmartin.github.io/limpca/reference/plotLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot — plotLine","text":"Y numerical matrix containing rows drawn. Can NULL lmpDataList defined. lmpDataList NULL, list outcomes, design formula, outputted data2LmpDataList. rows vector either row name(s) \\(Y\\) matrix plot (character) row index position(s) (integer). Default 1. type Type graph drawn: \"p\" point, \"l\" line (default) \"s\" segment. title Plot title. xlab NULL, label x-axis. ylab NULL, label y-axis. xaxis_type data type x-axis: either \"numeric\" (default) \"character\". stacked Logical. TRUE, draw stacked plots, otherwise draw separate plots. ncol stacked FALSE, number columns represent separate plots. Default 1. nrow stacked FALSE, number rows represent separate plots. facet_label stacked FALSE, labels separate plots. hline NULL, draws () horizontal line(s), default y intercept = 0. size Argument length 1 giving points size (type == \"p\") line size (type == \"l\" \"s\"). color NULL, argument length 1 possible values: \"rows\", color name (character) numeric value representing color. shape points shape (default = 1) type == \"p\". theme ggplot2 theme (default: theme_bw()), see ?ggtheme info. ang_x_axis NULL, rotation angle rotate x-axis text (based argument axis.text.x ggplot2::theme())","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot — plotLine","text":"ggplot2 line plot.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotLine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Line plot — plotLine","text":"Either Y lmpDataList need defined. given, priority goes Y.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line plot — plotLine","text":"","code":"data(\"UCH\") plotLine(Y = UCH$outcomes)   plotLine(lmpDataList = UCH)   # separate plots plotLine(Y = UCH$outcomes, rows = seq(1, 8), hline = NULL)  plotLine(Y = UCH$outcomes, rows = seq(1, 8), color = 2)  plotLine(Y = UCH$outcomes, rows = seq(1, 8), ncol = 2)  plotLine(   Y = UCH$outcomes, type = \"p\",   rows = seq(1, 8), ncol = 2 )   # stacked plots library(ggplot2) plotLine(   Y = UCH$outcomes, rows = seq(1, 1),   stacked = TRUE, color = \"rows\" ) +   scale_color_brewer(palette = \"Set1\")"},{"path":"https://manonmartin.github.io/limpca/reference/plotMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Means plot — plotMeans","title":"Means plot — plotMeans","text":"given response variable, draws plot response means levels three categorical factors design. design balanced, allows visualize main effects interactions response interest. unbalanced designs, plot must used caution.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Means plot — plotMeans","text":"","code":"plotMeans(   Y = NULL,   design = NULL,   lmpDataList = NULL,   cols = NULL,   x,   z = NULL,   w = NULL,   title = NULL,   xlab = NULL,   ylab = NULL,   color = NULL,   shape = NULL,   linetype = NULL,   size = 2,   hline = NULL,   theme = theme_bw() )"},{"path":"https://manonmartin.github.io/limpca/reference/plotMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Means plot — plotMeans","text":"Y numerical matrix containing columns drawn. Can NULL lmpDataList defined. design \\(n \\times k\\) \"freely encoded\" experimental design data.frame. Can NULL lmpDataList defined. lmpDataList NULL, list outcomes, design formula, outputted data2LmpDataList. cols vector either column name(s) \\(Y\\) matrix plot (character) column index position(s) (integer). x character string giving design factor whose levels form x-axis. z character string giving design factor whose levels form traces. w character string giving design factor whose levels used facet. title Plot title. xlab NULL, label x-axis. ylab NULL, label y-axis. color NULL, color points line. shape NULL, points shape. linetype NULL, line type. size Points size. hline NULL, draws () horizontal line(s). theme ggplot2 theme, see ?ggtheme info.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Means plot — plotMeans","text":"list ggplot2 means plot(s).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Means plot — plotMeans","text":"Either Y lmpDataList need defined. given, priority goes Y. rule applies design lmpDataList.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Means plot — plotMeans","text":"","code":"data(\"UCH\") # 1 factor plotMeans(   Y = UCH$outcomes, design = UCH$design, cols = \"4.0628702\",   x = \"Hippurate\", color = \"blue\" ) #> $`4.0628702`  #>   # equivalent to: plotMeans(   lmpDataList = UCH, cols = \"4.0628702\",   x = \"Hippurate\", color = \"blue\" ) #> $`4.0628702`  #>   # 2 factors plotMeans(   Y = UCH$outcomes, design = UCH$design, cols = c(364, 365),   x = \"Hippurate\", z = \"Time\", shape = c(15, 1) ) #> $`4.0628702`  #>  #> $`4.0464902`  #>   # 3 factors plotMeans(   Y = UCH$outcomes, design = UCH$design, cols = c(364, 365),   x = \"Hippurate\", z = \"Time\", w = \"Citrate\", linetype = c(3, 3) ) #> $`4.0628702`  #>  #> $`4.0464902`  #>"},{"path":"https://manonmartin.github.io/limpca/reference/plotScatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot — plotScatter","title":"Scatter plot — plotScatter","text":"Produces plot describing relationship two columns outcomes matrix \\(Y\\). Colors symbols can chosen levels design factors. Ellipses, polygons segments can added group different sets points graph.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot — plotScatter","text":"","code":"plotScatter(   Y = NULL,   design = NULL,   lmpDataList = NULL,   xy,   color = NULL,   shape = NULL,   points_labs = NULL,   title = \"Scatter plot\",   xlab = NULL,   ylab = NULL,   size = 2,   size_lab = 3,   drawShapes = c(\"none\", \"ellipse\", \"polygon\", \"segment\"),   typeEl = c(\"norm\", \"t\", \"euclid\"),   levelEl = 0.9,   alphaPoly = 0.4,   theme = theme_bw(),   drawOrigin = FALSE )"},{"path":"https://manonmartin.github.io/limpca/reference/plotScatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot — plotScatter","text":"Y \\(n \\times m\\) matrix \\(n\\) observations \\(m\\) variables. Can NULL lmpDataList defined. design \\(n \\times k\\) \"freely encoded\" experimental design data.frame. Can NULL lmpDataList defined. lmpDataList NULL, list outcomes, design formula, outputted data2LmpDataList. xy x- y-axis values: vector length 2 either column name(s) \\(Y\\) matrix plot (character) index position(s) (integer). color NULL, character string giving column name design used color. Currently treated discrete variable. shape NULL, character string giving column name design used shape. Currently treated discrete variable. points_labs NULL, character vector point labels. title Plot title. xlab NULL, label x-axis. ylab NULL, label y-axis. size points size, default 2. size_lab size points labels, default 3. drawShapes Multiple shapes can drawn based color: \"none\" shape (default), \"ellipse\" (ellipses ggplot2::stat_ellipse()), \"polygon\" (polygons ggplot2::geom_polygon()) \"segment\" (segment centroids ggplot2::geom_segment()). typeEl type ellipse, either \"norm\" (multivariate normal distribution, default), \"t\" (multivariate t-distribution) \"euclid\" (draws circle radius equal level, representing euclidean distance center). levelEl confidence level draw ellipse, default 0.9. alphaPoly degree transparency polygons, default 0.4. theme ggplot2 theme (default: theme_bw()), see ?ggtheme info. drawOrigin TRUE, draws horizontal vertical intercepts (0,0).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot — plotScatter","text":"ggplot2 scatter plot.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatter plot — plotScatter","text":"Either Y lmpDataList need defined. given, priority goes Y. rule applies design lmpDataList.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot — plotScatter","text":"","code":"data(\"UCH\")  # Without the design info plotScatter(Y = UCH$outcomes, xy = c(453, 369))   # equivalent to: plotScatter(lmpDataList = UCH, xy = c(453, 369))   # With color and shape plotScatter(   lmpDataList = UCH,   xy = c(453, 369), color = \"Hippurate\",   shape = \"Citrate\" )   # equivalent to: plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), color = \"Hippurate\",   shape = \"Citrate\" )   # With color and shapes plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), color = \"Hippurate\",   drawShapes = \"ellipse\" )   plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), color = \"Hippurate\",   drawShapes = \"polygon\" )   plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), color = \"Hippurate\",   drawShapes = \"segment\" )   # With customized shapes library(ggplot2) plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), shape = \"Hippurate\", size = 3 ) +   scale_discrete_identity(     aesthetics = \"shape\",     guide = \"legend\"   )   plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), shape = \"Hippurate\" ) +   scale_shape_discrete(solid = FALSE)   plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), shape = \"Hippurate\" ) +   scale_shape_manual(values = c(15, 16, 17))   # With labels plotScatter(   Y = UCH$outcomes, design = UCH$design,   xy = c(453, 369), points_labs = rownames(UCH$design) )"},{"path":"https://manonmartin.github.io/limpca/reference/plotScatterM.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot matrix — plotScatterM","title":"Scatter plot matrix — plotScatterM","text":"Produces scatter plot matrix selected columns outcomes matrix \\(Y\\) choosing specific colors symbols four factors design upper lower diagonals.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatterM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot matrix — plotScatterM","text":"","code":"plotScatterM(   Y = NULL,   design = NULL,   lmpDataList = NULL,   cols,   labelVector = NULL,   title = \"Scatterplot matrix\",   varname.colorup = NULL,   varname.colordown = NULL,   varname.pchup = NULL,   varname.pchdown = NULL,   vec.colorup = NULL,   vec.colordown = NULL,   vec.pchup = NULL,   vec.pchdown = NULL )"},{"path":"https://manonmartin.github.io/limpca/reference/plotScatterM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot matrix — plotScatterM","text":"Y \\(n \\times m\\) matrix \\(n\\) observations \\(m\\) variables. Can NULL lmpDataList defined. design \\(n \\times k\\) \"freely encoded\" experimental design data.frame. Can NULL lmpDataList defined. lmpDataList NULL, list outcomes, design formula, outputted data2LmpDataList. cols vector either column names \\(Y\\) matrix plot (character) column index positions. labelVector Labels display diagonal. NULL, column names deduced cols. title Title graph. varname.colorup character string name variable used color upper triangle. varname.colordown character string name variable used color lower triangle. varname.pchup character string name variable used mark points upper triangle. varname.pchdown character string name variable used mark points lower triangle. vec.colorup color vector (character numeric) length equal number levels varname.colorup. vec.colordown color vector (character numeric) length equal number levels varname.colordown. vec.pchup symbol vector (character numeric) length equal number levels varname.pchup. vec.pchdown symbol vector (character numeric) length equal number levels varname.pchdown.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatterM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot matrix — plotScatterM","text":"matrix scatter plots.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatterM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatter plot matrix — plotScatterM","text":"Either Y lmpDataList need defined. given, priority goes Y. rule applies design lmpDataList.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/plotScatterM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot matrix — plotScatterM","text":"","code":"data(\"UCH\")  # basic usage plotScatterM(   Y = UCH$outcomes, design = UCH$design, cols = c(1:4) )  # equivalent to: plotScatterM(   lmpDataList = UCH, cols = c(1:4) )   # with optionnal arguments plotScatterM(   Y = UCH$outcomes, design = UCH$design, cols = c(1:4),   varname.colorup = \"Hippurate\", varname.colordown = \"Citrate\",   varname.pchup = \"Time\", varname.pchdown = \"Day\",   vec.colorup = c(2, 4, 1),   vec.colordown = c(\"orange\", \"purple\", \"green\"),   vec.pchup = c(1, 2), vec.pchdown = c(\"a\", \"b\") )"},{"path":"https://manonmartin.github.io/limpca/reference/trout.html","id":null,"dir":"Reference","previous_headings":"","what":"trout: the Rainbow trouts transcriptomic dataset — trout","title":"trout: the Rainbow trouts transcriptomic dataset — trout","text":"dataset comes study modulation immunity rainbow trout (Oncorhynchus mykiss) exposure cadmium (Cd) combined polyunsaturated fatty acids (PUFAs) enriched diets [Cornet et al., 2018]. responses quantified measuring modification expression 15 immune-related genes (m = 15) RT-qPCR (reverse transcription quantita- tive polymerase chain reaction). experiment carried 72 trouts 3 factors considered experimental design: Day Measurements trouts collected days 28, 70 72 Treatment Four polyunsaturated fatty acid diets: alpha-linolenic acid (ALA), linoleic acid (LA), eicosapentaenoic acid (EPA) docosahexaenoic acid (DHA) Exposure Trouts exposed (level = 2) (level = 0) high cadmium concentrations. gives 3 × 4 × 2 factorial design.  24 trials corresponds different aquarium. Three fish analysed (3 replicates) condition, giving total 72 observations. limpca vignette, outliers first detected removed dataset. data aquarium transformed log10 mean aggregated order avoid use aquarium random factor statictical model. Data centered scaled column. ASCA+/APCA+ analysis applyed transformed data.","code":""},{"path":"https://manonmartin.github.io/limpca/reference/trout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trout: the Rainbow trouts transcriptomic dataset — trout","text":"","code":"data(\"trout\")"},{"path":"https://manonmartin.github.io/limpca/reference/trout.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"trout: the Rainbow trouts transcriptomic dataset — trout","text":"list 3 : experimental design, outcomes every observation formula considered analyze data.   Caution ! , data must first aggregated analyzed ASCA+ (see details related vignette) outcomes dataset 72 observations 15 response variables formula suggested formula analyze data design experimental design 72 observations 4 explanatory variables","code":""},{"path":"https://manonmartin.github.io/limpca/reference/trout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"trout: the Rainbow trouts transcriptomic dataset — trout","text":"data must first aggregated analyzed limpca. remove hierarchy design allow apply classical fixed effect general linear model data. See details trout vignette (print(vignette(topic = \"Trout\", package = \"limpca\"))).","code":""},{"path":"https://manonmartin.github.io/limpca/reference/trout.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"trout: the Rainbow trouts transcriptomic dataset — trout","text":"Cornet, V., Ouaach, ., Mandiki, S., Flamion, E., Ferain, ., Van Larebeke, M., Lemaire, B., Reyes Lopez F.,  Tort, L., Larondelle, Y. Kestemont, P. (2018).   Environmentally-realistic concentration cadmium combined polyunsaturated fatty acids enriched diets modulated non-specific immunity rainbow trout.   Aquatic Toxicology, 196, 104--116. https://doi.org/10.1016/j.aquatox.2018.01.012 Benaiche, N. (2022). Stabilisation R package LMWiRe – Linear Models Wide Responses.  Prom. : Govaerts, B. Master thesis. Institut de statistique, biostatistique et sciences actuarielles, UCLouvain, Belgium.   http://hdl.handle.net/2078.1/thesis:33996","code":""},{"path":"https://manonmartin.github.io/limpca/reference/trout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"trout: the Rainbow trouts transcriptomic dataset — trout","text":"","code":"data(\"trout\")"},{"path":"https://manonmartin.github.io/limpca/news/index.html","id":"limpca-0099","dir":"Changelog","previous_headings":"","what":"limpca 0.0.99","title":"limpca 0.0.99","text":"submitted bioconductor added argument lmpDataList pcaBySvd(), plotLine(), plotScatter(), plotScatterM(), plotMeans(), plotDesign() added function data2LmpDataList()","code":""}]
