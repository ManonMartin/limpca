% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmwLoading2dPlot.R
\name{lmwLoading2dPlot}
\alias{lmwLoading2dPlot}
\title{Loading plots on a 2D scatter plot}
\usage{
lmwLoading2dPlot(
  resLmwPcaEffects,
  effectNames = NULL,
  axes = c(1, 2),
  points_labs_rn = FALSE,
  pl_n = 10,
  metadata = NULL,
  ...
)
}
\arguments{
\item{resLmwPcaEffects}{A list corresponding to the output value of \code{\link{lmwPcaEffects}}.}

\item{effectNames}{Names of the effects to be plotted. If \code{NULL}, all the effects are plotted.}

\item{axes}{A numerical vector with the 2 Principal Components axes to be drawn.}

\item{points_labs_rn}{Boolean indicating if the labels should be plotted. By default, uses the column names of the outcome matrix but it can be manually specified with the \code{points_labs} argument from \code{\link{plotScatter}}.}

\item{pl_n}{The number of labels that should be plotted, based on a distance measure (\emph{see} Details).}

\item{metadata}{A nxk "free encoded" data.frame corresponding to \code{design} in \code{\link{plotScatter}}.}

\item{...}{Additional arguments to be passed to \code{\link{plotScatter}}.}
}
\value{
A list of loading plots (ggplot).
}
\description{
Draws the Loading plots of each effect matrix provided in \code{\link{lmwPcaEffects}} outputs. As a wrapper of the \code{\link{plotScatter}} function, it allows the visualization of effect loading matrices for two components at a time with all options available in \code{\link{plotScatter}}.
}
\details{
\code{lmwLoading2dPlot} is a wrapper of \code{\link{plotScatter}}.

The distance measure $d$ that is used to rank the variables is based on the following formula:
$d = \sqrt(P_{ij}^2*\lambda_{ij}^2)$ where $i$ and $j$ are two selected Principal
Components, $P_{ij}$ represents their loadings matrix and $\lambda_{ij}$ their singular values vector.
}
\examples{

data('UCH')
resLmwModelMatrix = lmwModelMatrix(UCH)
resLmwEffectMatrices = lmwEffectMatrices(resLmwModelMatrix)
resASCA = lmwPcaEffects(resLmwEffectMatrices)

# adding color, shape and labels to points
id_hip <- c(126:156,362:375)
peaks <- rep("other", ncol(UCH$outcomes))
peaks[id_hip] <- "hip"
metadata <- data.frame(peaks)

lmwLoading2dPlot(resASCA,effectNames = "Hippurate",
metadata = metadata, points_labs_rn = TRUE, color="peaks",
shape = "peaks")

# changing max.overlaps of ggrepel
options(ggrepel.max.overlaps = 30)
lmwLoading2dPlot(resASCA,effectNames = "Hippurate",
metadata = metadata, points_labs_rn = TRUE, color="peaks",
shape = "peaks", pl_n = 20)
}
