% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmwEffectMatrices.R
\name{lmwEffectMatrices}
\alias{lmwEffectMatrices}
\title{Computes the effect matrices}
\usage{
lmwEffectMatrices(resLmwModelMatrix, SS = TRUE, contrastList = NA)
}
\arguments{
\item{resLmwModelMatrix}{A list of 5 elements from \code{\link{lmwModelMatrix}}.}

\item{SS}{Logical. If \code{FALSE}, won't compute the percentage of variance for each effect.}

\item{contrastList}{A list of contrast for each parameter. If \code{NA}, the function creates automatically the list by default.}
}
\value{
A list with the following elements:
\describe{
\item{\code{lmwDataList}}{The initial object: a list with outcomes, design and formula.}
\item{\code{modelMatrix}}{A \emph{nxK} model matrix specifically encoded for the ASCA-GLM method.}
\item{\code{modelMatrixByEffect}}{A list of \emph{p} model matrices for each effect.}
\item{\code{effectsNamesUnique}}{A character vector with the \emph{p} names of the model effects, each repeated once.}
\item{\code{effectsNamesAll}}{A character vector with the \emph{K} names of the model effects ordered and repeated as the column names of the model matrix.}
\item{\code{effectMatrices}}{A list of \emph{p} effect matrices for each model effect.}
\item{\code{predictedvalues}}{The \emph{nxm} matrix of predicted outcome values.}
\item{\code{residuals}}{The \emph{nxm} matrix of model residuals.}
\item{\code{parameters}}{The \emph{pxm} matrix of the estimated parameters.}
\item{\code{type3SS}}{A vector with the type III sum of squares for each model effect \emph{(If SS = TRUE)}.}
\item{\code{variationPercentages}}{A vector with the percentage of variance for each model effect \emph{(If SS = TRUE)}.}
\item{\code{varPercentagesPlot}}{A ggplot bar plot of the contributions of each model effect to the total variance \emph{(If SS = TRUE)}.}
}
}
\description{
Runs a GLM and decomposes the outcomes into effect matrices for each model effect.
}
\examples{
 data('UCH')
 resLmwModelMatrix <- lmwModelMatrix(UCH)
 lmwEffectMatrices(resLmwModelMatrix)

}
